{"version":3,"sources":["../src/MethodDecorators.js"],"names":["transformController","url","original","args","_timer","Date","req","res","apply","e","Services","Middlewares","catchControllerErrors","console","warn","chalk","red","send","error","meth","method","target","name","descriptor","value","_routes","push","fn","controllerName","constructor","Get","Post","Put","Delete","Crud","model","prototype","find","findone","create","update","destroy"],"mappings":"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","sourcesContent":["import chalk from \"chalk\";\nimport { Services } from \"./Services\";\n\nfunction transformController(url, original) {\n\treturn async function (...args) {\n\t\ttry {\n\t\t\tif (!this._timer) this._timer = new Date();\n\t\t\tthis.req = args[0];\n\t\t\tthis.res = args[1];\n\t\t\tawait original.apply(this, args);\n\t\t} catch (e) {\n\t\t\tif (Services.Middlewares.catchControllerErrors) {\n\t\t\t\tServices.Middlewares.catchControllerErrors(args[0], args[1], e);\n\t\t\t} else {\n\t\t\t\tconsole.warn(chalk.red(`Error in controller : ${e}\\nNot restarted.`));\n\t\t\t\targs[1].send({ error: `Error in controller` });\n\t\t\t}\n\t\t}\n\t};\n}\nfunction meth(url, method) {\n\treturn function (target, name, descriptor) {\n\t\tif (name) {\n\t\t\tconst original = descriptor.value;\n\t\t\tdescriptor.value = transformController(url, original);\n\t\t\tif (!target._routes) target._routes = [];\n\t\t\ttarget._routes.push({ method, url, fn: descriptor.value, name, controllerName: target.constructor.name });\n\t\t}\n\t\treturn descriptor;\n\t};\n}\n\nfunction Get(url) {\n\treturn meth(url, \"get\");\n}\nfunction Post(url) {\n\treturn meth(url, \"post\");\n}\nfunction Put(url) {\n\treturn meth(url, \"put\");\n}\nfunction Delete(url) {\n\treturn meth(url, \"delete\");\n}\nfunction Crud(url, model) {\n\treturn function (target, name, descriptor) {\n\t\tif (name) return console.warn(\"Decorator Crud is only for class, not for properties function\");\n\t\ttarget.prototype.model = model;\n\t\tlet controllerName = target.prototype.constructor.name;\n\t\tif (!target.prototype._routes) target.prototype._routes = [];\n\t\ttarget.prototype._routes.push({\n\t\t\tmethod: \"get\",\n\t\t\turl: url,\n\t\t\tfn: transformController(url, target.prototype.find),\n\t\t\tname: \"find\",\n\t\t\tcontrollerName,\n\t\t});\n\t\ttarget.prototype._routes.push({\n\t\t\tmethod: \"get\",\n\t\t\turl: `${url}/:id`,\n\t\t\tfn: transformController(`${url}/:id`, target.prototype.findone),\n\t\t\tname: \"findone\",\n\t\t\tcontrollerName,\n\t\t});\n\t\ttarget.prototype._routes.push({\n\t\t\tmethod: \"post\",\n\t\t\turl: url,\n\t\t\tfn: transformController(url, target.prototype.create),\n\t\t\tname: \"create\",\n\t\t\tcontrollerName,\n\t\t});\n\t\ttarget.prototype._routes.push({\n\t\t\tmethod: \"put\",\n\t\t\turl: `${url}/:id`,\n\t\t\tfn: transformController(`${url}/:id`, target.prototype.update),\n\t\t\tname: \"updateone\",\n\t\t\tcontrollerName,\n\t\t});\n\t\ttarget.prototype._routes.push({\n\t\t\tmethod: \"delete\",\n\t\t\turl: `${url}/:id`,\n\t\t\tfn: transformController(`${url}/:id`, target.prototype.destroy),\n\t\t\tname: \"destroy\",\n\t\t\tcontrollerName,\n\t\t});\n\n\t\treturn descriptor;\n\t};\n}\n\nexport { Get, Post, Put, Delete, Crud };\n"],"file":"MethodDecorators.js"}