{"version":3,"sources":["../src/DbMysql.js"],"names":["path","require","mysql","chalk","globule","DbTable","DbMysql","constructor","models","init","config","pool","createPool","connection","query","sql","sqlData","catchError","getConnection","error","console","warn","results","release","red","constraints","model","toLink","fieldName","field","Object","entries","def","attributes","push","key","val","length","q","tableName","database","actualConstraints","iLink","link","tocreate","todelete","iActualConstraint","actualConstraint","q2","CONSTRAINT_NAME","actualConstraintBis","COLUMN_NAME","REFERENCED_TABLE_NAME","UPDATE_RULE","onUpdate","DELETE_RULE","onDelete","primary","createTable","what","f","_getJoinedModel","_ormTypeToDatabaseType","_getNotnull","type","_getIndex","_getDefault","join","updateTable","describe","type1","type2","def2","nullChanged","iRow","row","Field","notnull","Null","Type","Default","toLowerCase","defaultsTo","synchronize","exists","rows1","migrate","rows2","createIndex","index","iRows","row2","Column_name","ormtype","info","typeJS","res","autoincrement","JSON","stringify","replace","parse","primaryType","primaryLength","getModels","Model","Array","decorator","target","prototype","_models","loadModels","files","find","process","cwd","yellow","iFile","file","substring","useUpdatedAt","undefined","useCreatedAt","modelname","basename","debug","values","Migration","dropTable","dropField","renameField","oldField","newField","exec","Models"],"mappings":"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","sourcesContent":["const path = require(\"path\");\nconst mysql = require(\"mysql2/promise\");\nconst chalk = require(\"chalk\");\n\nconst globule = require(\"globule\");\nconst DbTable = require(\"./DbTable\");\n\nconst DbMysql = new (class {\n\tconstructor() {\n\t\tthis.models = {};\n\t}\n\tasync init(config) {\n\t\tthis.config = config;\n\t\tconst pool = mysql.createPool(this.config.connection);\n\t\tthis.connection = {\n\t\t\tpool: pool,\n\t\t\tquery: async function (sql, sqlData = [], catchError = false) {\n\t\t\t\tlet connection;\n\t\t\t\ttry {\n\t\t\t\t\tconnection = await this.pool.getConnection();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn(\"connection-error\", error);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tlet results = await connection.query(sql, sqlData);\n\t\t\t\t\t// console.log(\"sql, sqlData\", sql, sqlData); //, results\n\t\t\t\t\tconnection.release();\n\t\t\t\t\treturn results[0];\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconnection.release();\n\t\t\t\t\tif (catchError) throw error;\n\t\t\t\t\tconsole.warn(chalk.red(\"sql-error\"), error, sql, sqlData);\n\t\t\t\t\treturn null;\n\t\t\t\t\t// } finally {\n\t\t\t\t\t// \tconnection.release(); // always put connection back in pool after last query\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tasync constraints(model) {\n\t\tlet toLink = [];\n\t\tfor (const [fieldName, field] of Object.entries(model.def.attributes)) {\n\t\t\tif (field.model) toLink.push({ key: fieldName, val: field });\n\t\t}\n\t\tif (toLink.length) {\n\t\t\tlet q = `select * from information_schema.KEY_COLUMN_USAGE where TABLE_NAME='${model.def.tableName}' && TABLE_SCHEMA='${this.config.connection.database}'`; //COLUMN_NAME, CONSTRAINT_NAME, REFERENCED_COLUMN_NAME, REFERENCED_TABLE_NAME\n\t\t\tlet actualConstraints = await this.connection.query(q);\n\t\t\tfor (let iLink = 0; iLink < toLink.length; iLink++) {\n\t\t\t\tconst link = toLink[iLink];\n\n\t\t\t\tlet tocreate = true,\n\t\t\t\t\ttodelete = false;\n\t\t\t\tfor (let iActualConstraint = 0; iActualConstraint < actualConstraints.length; iActualConstraint++) {\n\t\t\t\t\tconst actualConstraint = actualConstraints[iActualConstraint];\n\t\t\t\t\tlet q2 = `select * from information_schema.referential_constraints where \\`CONSTRAINT_NAME\\` like '${actualConstraint.CONSTRAINT_NAME}'`;\n\t\t\t\t\tlet actualConstraintBis = (await this.connection.query(q2))[0];\n\t\t\t\t\tif (!this.models[link.val.model]) {\n\t\t\t\t\t\tconsole.warn(`Model not found : ${link.val.model}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tactualConstraint.COLUMN_NAME == link.key &&\n\t\t\t\t\t\tactualConstraint.REFERENCED_TABLE_NAME == this.models[link.val.model].def.tableName\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (actualConstraintBis.UPDATE_RULE == link.val.onUpdate && actualConstraintBis.DELETE_RULE == link.val.onDelete) {\n\t\t\t\t\t\t\ttocreate = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttodelete = actualConstraint.CONSTRAINT_NAME;\n\t\t\t\t\t\t\ttocreate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (todelete) {\n\t\t\t\t\tlet q = `ALTER TABLE \\`${model.def.tableName}\\` DROP FOREIGN KEY \\`${todelete}\\``;\n\t\t\t\t\tconsole.warn(q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t\tif (tocreate && (link.val.onDelete || link.val.onUpdate)) {\n\t\t\t\t\tlet q = `ALTER TABLE \\`${model.def.tableName}\\` ADD CONSTRAINT \\`${model.def.tableName}_${\n\t\t\t\t\t\tthis.models[link.val.model].def.tableName\n\t\t\t\t\t}_${link.key}_fk\\` FOREIGN KEY (\\`${link.key}\\`) REFERENCES \\`${this.models[link.val.model].def.tableName}\\`(\\`${\n\t\t\t\t\t\tthis.models[link.val.model].primary\n\t\t\t\t\t}\\`)`;\n\t\t\t\t\tif (link.val.onDelete) q += ` ON DELETE ${link.val.onDelete}`;\n\t\t\t\t\tif (link.val.onUpdate) q += ` ON UPDATE ${link.val.onUpdate}`;\n\t\t\t\t\tconsole.warn(q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync createTable(def) {\n\t\tlet what = [];\n\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\tif (field.model) {\n\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\tif (f) what.push(fieldName + \" \" + this._ormTypeToDatabaseType(f[0], f[1]) + this._getNotnull(field));\n\t\t\t} else {\n\t\t\t\twhat.push(\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\t\tthis._getIndex(field) +\n\t\t\t\t\t\tthis._getDefault(field, fieldName)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlet q = \"CREATE TABLE IF NOT EXISTS \" + def.tableName + \" (\" + what.join(\", \") + \")\";\n\t\tconsole.warn(\"q\", q);\n\t\tawait this.connection.query(q);\n\t}\n\tasync updateTable(def) {\n\t\tlet describe = await this.connection.query(\"DESCRIBE \" + def.tableName + \"\");\n\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\tlet type1 = null;\n\t\t\tif (field.model) {\n\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\tif (f) {\n\t\t\t\t\ttype1 = this._ormTypeToDatabaseType(f[0], f[1]);\n\t\t\t\t\tfield.type = f[0];\n\t\t\t\t\tfield.length = f[1];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttype1 = this._ormTypeToDatabaseType(field.type, field.length);\n\t\t\t}\n\t\t\tlet type2 = null,\n\t\t\t\tdef2 = null;\n\t\t\tlet nullChanged = false;\n\t\t\tfor (let iRow = 0; iRow < describe.length; iRow++) {\n\t\t\t\tconst row = describe[iRow];\n\t\t\t\t// console.log(\"row\", row);\n\t\t\t\tif (row.Field == fieldName) {\n\t\t\t\t\tif (field.notnull === false && row.Null == \"NO\") nullChanged = true;\n\t\t\t\t\tif (field.notnull !== false && row.Null == \"YES\") nullChanged = true;\n\t\t\t\t\ttype2 = row.Type;\n\t\t\t\t\tdef2 = row.Default;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(\"nullChanged\", nullChanged, def.tableName, fieldName);\n\t\t\t// if (nullChanged)\n\n\t\t\tif (type2 === null) {\n\t\t\t\tif (field.model) {\n\t\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\t\tfield.type = f[0];\n\t\t\t\t\tfield.length = f[1];\n\t\t\t\t}\n\t\t\t\tlet q =\n\t\t\t\t\t\"ALTER TABLE \" +\n\t\t\t\t\tdef.tableName +\n\t\t\t\t\t\" ADD \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\tthis._getIndex(field) +\n\t\t\t\t\tthis._getDefault(field, fieldName);\n\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\tawait this.connection.query(q);\n\t\t\t} else if (\n\t\t\t\ttype1 &&\n\t\t\t\ttype2 &&\n\t\t\t\t(type1.toLowerCase() != type2.toLowerCase() || (def2 != field.defaultsTo && type1.toLowerCase() != \"text\"))\n\t\t\t) {\n\t\t\t\tlet q =\n\t\t\t\t\t\"ALTER TABLE \" +\n\t\t\t\t\tdef.tableName +\n\t\t\t\t\t\" CHANGE \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\tthis._getDefault(field, fieldName);\n\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\tawait this.connection.query(q);\n\t\t\t} else if (nullChanged) {\n\t\t\t\tlet q =\n\t\t\t\t\t\"ALTER TABLE \" +\n\t\t\t\t\tdef.tableName +\n\t\t\t\t\t\" CHANGE \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\tthis._getIndex(field) +\n\t\t\t\t\tthis._getDefault(field, fieldName);\n\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\tawait this.connection.query(q);\n\t\t\t}\n\t\t}\n\t}\n\tasync synchronize(def) {\n\t\tlet exists = true;\n\n\t\tlet rows1 = await this.connection.query(\"SELECT * FROM \" + def.tableName + \" LIMIT 0,1\");\n\t\tif (rows1 && this.config.migrate == \"recreate\") await this.connection.query(\"DROP TABLE IF EXISTS \" + def.tableName + \"\");\n\t\tif (rows1 === null || this.config.migrate == \"recreate\") exists = false;\n\n\t\tif (this.config.migrate == \"alter\") {\n\t\t\tif (!exists) await this.createTable(def);\n\t\t\telse await this.updateTable(def);\n\n\t\t\tlet rows2 = await this.connection.query(\"SHOW INDEX FROM \" + def.tableName + \"\");\n\t\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\t\tlet createIndex = false;\n\t\t\t\t//let createUnique = false;\n\t\t\t\tif (field.model || field.index) {\n\t\t\t\t\tcreateIndex = true;\n\t\t\t\t\tfor (let iRows = 0; iRows < rows2.length; iRows++) {\n\t\t\t\t\t\tconst row2 = rows2[iRows];\n\t\t\t\t\t\tif (row2.Column_name == fieldName) createIndex = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// if (field.unique) {\n\t\t\t\t// \tcreateUnique = true;\n\t\t\t\t// \tfor (let iRows = 0; iRows < rows2.length; iRows++) {\n\t\t\t\t// \t\tconst row2 = rows2[iRows];\n\t\t\t\t// \t\tif (row2.Column_name == fieldName) createIndex = false;\n\t\t\t\t// \t}\n\t\t\t\t// }\n\n\t\t\t\tif (createIndex) {\n\t\t\t\t\tlet q = \"ALTER TABLE \" + def.tableName + \" ADD INDEX (\" + fieldName + \")\";\n\t\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t\t// if (createUnique) {\n\t\t\t\t// \tlet q = \"ALTER TABLE \" + def.tableName + \" ADD UNIQUE (\" + fieldName + \")\";\n\t\t\t\t// \tconsole.warn(\"q\", q);\n\t\t\t\t// \tawait this.connection.query(q);\n\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\t}\n\t_ormTypeToDatabaseType(ormtype, length, info) {\n\t\tif (!info) info = \"type\";\n\t\tlet typeJS = \"\";\n\t\tormtype = ormtype.toLowerCase();\n\t\tlet res = \"\";\n\t\tif (ormtype == \"int\" || ormtype == \"integer\") {\n\t\t\tif (!length) length = 11;\n\t\t\tres = \"INT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"tinyint\") {\n\t\t\tif (!length) length = 4;\n\t\t\tres = \"TINYINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"smallint\") {\n\t\t\tif (!length) length = 6;\n\t\t\tres = \"SMALLINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"mediumint\") {\n\t\t\tif (!length) length = 9;\n\t\t\tres = \"MEDIUMINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"year\") {\n\t\t\tif (!length) length = 4;\n\t\t\tres = \"YEAR(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"float\") {\n\t\t\tres = \"FLOAT\";\n\t\t\tif (length) res += \"(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"double\") {\n\t\t\tres = \"DOUBLE\";\n\t\t\ttypeJS = \"number\";\n\n\t\t\t// } else if (ormtype=='timestamp') {\n\t\t\t//     res = 'TIMESTAMP' ;\n\t\t} else if (ormtype == \"date\") {\n\t\t\tres = \"DATE\";\n\t\t\ttypeJS = \"date\";\n\t\t} else if (ormtype == \"datetime\") {\n\t\t\tres = \"DATETIME\";\n\t\t\ttypeJS = \"date\";\n\t\t} else if (ormtype == \"char\") {\n\t\t\tif (!length) length = 1;\n\t\t\tres = \"CHAR(\" + length + \")\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"varchar\" || ormtype == \"string\") {\n\t\t\tif (!length) length = 255;\n\t\t\tres = \"VARCHAR(\" + length + \")\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"tinytext\") {\n\t\t\tres = \"TINYTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"mediumtext\") {\n\t\t\tres = \"MEDIUMTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"longtext\") {\n\t\t\tres = \"LONGTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"text\" || ormtype == \"json\") {\n\t\t\tres = \"TEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"enum\") {\n\t\t\tres = \"ENUM\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"set\") {\n\t\t\tres = \"SET\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"decimal\" || ormtype == \"price\") {\n\t\t\tif (!length) length = \"10,2\";\n\t\t\tres = \"DECIMAL(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"bigint\") {\n\t\t\tif (!length) length = 20;\n\t\t\tres = \"BIGINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"time\") {\n\t\t\tres = \"TIME\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"tinyblob\") {\n\t\t\tres = \"TINYBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"mediumblob\") {\n\t\t\tres = \"MEDIUMBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"longblob\") {\n\t\t\tres = \"LONGBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"blob\") {\n\t\t\tres = \"BLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"binary\") {\n\t\t\tres = \"BINARY\";\n\t\t\ttypeJS = \"binary\";\n\t\t} else if (ormtype == \"varbinary\") {\n\t\t\tres = \"VARBINARY\";\n\t\t\ttypeJS = \"binary\";\n\t\t} else if (ormtype == \"bit\") {\n\t\t\tres = \"BIT\";\n\t\t\ttypeJS = \"boolean\";\n\t\t} else if (ormtype == \"boolean\") {\n\t\t\tres = \"TINYINT(4)\";\n\t\t\ttypeJS = \"boolean\";\n\t\t}\n\n\t\tif (info == \"typejs\") return typeJS;\n\t\telse return res;\n\t}\n\t_getIndex(field) {\n\t\tlet res = \"\";\n\t\tif (field.primary) res += \" PRIMARY KEY\";\n\t\tif (field.autoincrement) res += \" AUTO_INCREMENT\";\n\t\treturn res;\n\t}\n\t_getNotnull(field) {\n\t\tlet res = \"\";\n\t\t// if (field.notnull || typeof field.notnull == \"undefined\") res = \" NOT NULL\";\n\t\t// else res = \" NULL\";\n\t\tif (field.notnull === false) res = \" NULL\";\n\t\telse res = \" NOT NULL\";\n\t\treturn res;\n\t}\n\t_getDefault(field, fieldName = \"\") {\n\t\tlet defaultsTo = \"\";\n\t\tif (typeof field.defaultsTo !== \"undefined\") {\n\t\t\tdefaultsTo = ' DEFAULT \"' + field.defaultsTo + '\"';\n\t\t\tif (field.type == \"boolean\" && (field.defaultsTo === true || field.defaultsTo === \"true\")) defaultsTo = \" DEFAULT 1\";\n\t\t\tif (field.type == \"boolean\" && (field.defaultsTo === false || field.defaultsTo === \"false\")) defaultsTo = \" DEFAULT 0\";\n\t\t\tif (field.type == \"json\") {\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof field.defaultsTo == \"object\") {\n\t\t\t\t\t\tdefaultsTo = ' DEFAULT \"' + JSON.stringify(field.defaultsTo).replace(/\"/g, '\\\\\"') + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdefaultsTo = ' DEFAULT \"' + JSON.stringify(JSON.parse(field.defaultsTo)).replace(/\"/g, '\\\\\"') + '\"';\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdefaultsTo = \"\";\n\t\t\t\t\tconsole.warn(chalk.red(`defaultsTo '${fieldName}' must be a valid Json object`));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn defaultsTo;\n\t}\n\t_getJoinedModel(field) {\n\t\tif (this.models[field.model]) {\n\t\t\treturn [this.models[field.model].primaryType, this.models[field.model].primaryLength];\n\t\t} else {\n\t\t\tconsole.warn(\"Model \" + field.model + \" not found\");\n\t\t}\n\t\treturn null;\n\t}\n\tgetModels() {\n\t\treturn this.models;\n\t}\n})();\n\nfunction Model(models = []) {\n\tif (models instanceof Array) {\n\t} else models = [models];\n\treturn function decorator(target) {\n\t\tif (!target.prototype._models) target.prototype._models = [];\n\t\ttarget.prototype._models = [...target.prototype._models, ...models];\n\t};\n}\n\nasync function loadModels() {\n\tlet files = globule.find(process.cwd() + \"/src/**/*.model.js\");\n\tconsole.warn(chalk.yellow(`@Info - Models availables :`));\n\tfor (let iFile = 0; iFile < files.length; iFile++) {\n\t\tlet file = files[iFile];\n\t\tfile = file.substring(0, file.length - 3);\n\t\tlet def = require(file);\n\t\tif (def.useUpdatedAt === undefined) def.useUpdatedAt = true;\n\t\tif (def.useCreatedAt === undefined) def.useCreatedAt = true;\n\t\tif (def.useCreatedAt) def.attributes[\"createdAt\"] = { type: \"datetime\", index: true };\n\t\tif (def.useUpdatedAt) def.attributes[\"updatedAt\"] = { type: \"datetime\", index: true };\n\t\tdef.modelname = path.basename(file);\n\t\tdef.modelname = def.modelname.substring(0, def.modelname.length - 6);\n\t\tdef.debug = DbMysql.config.debug;\n\t\t// global[def.modelname] =\n\t\tdef.tableName = def.modelname;\n\t\tDbMysql.models[def.modelname] = new DbTable(def, DbMysql);\n\t\tconsole.warn(`- ${def.modelname}`);\n\t}\n\n\tfor (const model of Object.values(DbMysql.models)) {\n\t\tawait DbMysql.synchronize(model.def);\n\t}\n\n\tfor (const model of Object.values(DbMysql.models)) {\n\t\tawait DbMysql.constraints(model);\n\t}\n}\n\nconst Migration = new (class {\n\tdropTable(tableName) {}\n\tdropField(tableName, fieldName) {}\n\trenameField(model, oldField, newField) {}\n\texec() {}\n})();\n\nconst Models = DbMysql.models;\nexport { DbMysql, Model, Models, Migration, loadModels };\n"],"file":"DbMysql.js"}