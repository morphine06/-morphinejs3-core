{"version":3,"sources":["../src/DbMysql.js"],"names":["path","require","mysql","chalk","globule","DbTable","DbMysql","constructor","models","init","config","pool","createPool","connection","query","sql","sqlData","catchError","getConnection","error","console","warn","results","release","red","files","find","process","cwd","iFile","length","file","substring","def","useUpdatedAt","undefined","useCreatedAt","attributes","type","index","modelname","basename","debug","model","Object","values","synchronize","constraints","toLink","fieldName","field","entries","push","key","val","q","tableName","database","actualConstraints","iLink","link","tocreate","todelete","iActualConstraint","actualConstraint","q2","CONSTRAINT_NAME","actualConstraintBis","COLUMN_NAME","REFERENCED_TABLE_NAME","UPDATE_RULE","onUpdate","DELETE_RULE","onDelete","primary","createTable","what","f","_getJoinedModel","_ormTypeToDatabaseType","_getNotnull","_getIndex","_getDefault","join","updateTable","describe","type1","type2","def2","iRow","row","Field","Type","Default","toLowerCase","defaultsTo","exists","rows1","migrate","rows2","createIndex","iRows","row2","Column_name","ormtype","info","typeJS","res","autoincrement","notnull","primaryType","primaryLength","getModels","Model","Array","decorator","target","prototype","_models","Migration","dropTable","dropField","renameField","oldField","newField","exec","Models"],"mappings":"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","sourcesContent":["const path = require(\"path\");\nconst mysql = require(\"mysql2/promise\");\nconst chalk = require(\"chalk\");\n\nconst globule = require(\"globule\");\nconst DbTable = require(\"./DbTable\");\n\nconst DbMysql = new (class {\n\tconstructor() {\n\t\tthis.models = {};\n\t}\n\tasync init(config) {\n\t\tthis.config = config;\n\t\tconst pool = mysql.createPool(this.config.connection);\n\t\tthis.connection = {\n\t\t\tpool: pool,\n\t\t\tquery: async function (sql, sqlData = [], catchError = false) {\n\t\t\t\tlet connection;\n\t\t\t\ttry {\n\t\t\t\t\tconnection = await this.pool.getConnection();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn(\"connection-error\", error);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tlet results = await connection.query(sql, sqlData);\n\t\t\t\t\t// console.log(\"sql, sqlData\", sql, sqlData); //, results\n\t\t\t\t\tconnection.release();\n\t\t\t\t\treturn results[0];\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconnection.release();\n\t\t\t\t\tif (catchError) throw error;\n\t\t\t\t\tconsole.warn(chalk.red(\"sql-error\"), error, sql, sqlData);\n\t\t\t\t\treturn null;\n\t\t\t\t\t// } finally {\n\t\t\t\t\t// \tconnection.release(); // always put connection back in pool after last query\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tlet files = globule.find(process.cwd() + \"/src/**/*.model.js\");\n\t\tfor (let iFile = 0; iFile < files.length; iFile++) {\n\t\t\tlet file = files[iFile];\n\t\t\tfile = file.substring(0, file.length - 3);\n\t\t\t// console.log(\"file\", file);\n\t\t\tlet def = require(file);\n\t\t\tif (def.useUpdatedAt === undefined) def.useUpdatedAt = true;\n\t\t\tif (def.useCreatedAt === undefined) def.useCreatedAt = true;\n\t\t\tif (def.useCreatedAt) def.attributes[\"createdAt\"] = { type: \"datetime\", index: true };\n\t\t\tif (def.useUpdatedAt) def.attributes[\"updatedAt\"] = { type: \"datetime\", index: true };\n\t\t\tdef.modelname = path.basename(file);\n\t\t\tdef.modelname = def.modelname.substring(0, def.modelname.length - 6);\n\t\t\t// console.log(\"def.modelname\", def.modelname);\n\t\t\tdef.debug = this.config.debug;\n\t\t\t// global[def.modelname] =\n\t\t\tthis.models[def.modelname] = new DbTable(def, this);\n\t\t}\n\n\t\tfor (const model of Object.values(this.models)) {\n\t\t\tawait this.synchronize(model.def);\n\t\t}\n\n\t\tfor (const model of Object.values(this.models)) {\n\t\t\tawait this.constraints(model);\n\t\t}\n\t}\n\n\tasync constraints(model) {\n\t\tlet toLink = [];\n\t\tfor (const [fieldName, field] of Object.entries(model.def.attributes)) {\n\t\t\tif (field.model) toLink.push({ key: fieldName, val: field });\n\t\t}\n\t\tif (toLink.length) {\n\t\t\tlet q = `select * from information_schema.KEY_COLUMN_USAGE where TABLE_NAME='${model.def.tableName}' && TABLE_SCHEMA='${this.config.connection.database}'`; //COLUMN_NAME, CONSTRAINT_NAME, REFERENCED_COLUMN_NAME, REFERENCED_TABLE_NAME\n\t\t\tlet actualConstraints = await this.connection.query(q);\n\t\t\tfor (let iLink = 0; iLink < toLink.length; iLink++) {\n\t\t\t\tconst link = toLink[iLink];\n\n\t\t\t\tlet tocreate = true,\n\t\t\t\t\ttodelete = false;\n\t\t\t\tfor (let iActualConstraint = 0; iActualConstraint < actualConstraints.length; iActualConstraint++) {\n\t\t\t\t\tconst actualConstraint = actualConstraints[iActualConstraint];\n\t\t\t\t\tlet q2 = `select * from information_schema.referential_constraints where \\`CONSTRAINT_NAME\\` like '${actualConstraint.CONSTRAINT_NAME}'`;\n\t\t\t\t\tlet actualConstraintBis = (await this.connection.query(q2))[0];\n\t\t\t\t\tif (!this.models[link.val.model]) {\n\t\t\t\t\t\tconsole.warn(`Model not found : ${link.val.model}`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tactualConstraint.COLUMN_NAME == link.key &&\n\t\t\t\t\t\tactualConstraint.REFERENCED_TABLE_NAME == this.models[link.val.model].def.tableName\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (actualConstraintBis.UPDATE_RULE == link.val.onUpdate && actualConstraintBis.DELETE_RULE == link.val.onDelete) {\n\t\t\t\t\t\t\ttocreate = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttodelete = actualConstraint.CONSTRAINT_NAME;\n\t\t\t\t\t\t\ttocreate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (todelete) {\n\t\t\t\t\tlet q = `ALTER TABLE \\`${model.def.tableName}\\` DROP FOREIGN KEY \\`${todelete}\\``;\n\t\t\t\t\tconsole.warn(q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t\tif (tocreate) {\n\t\t\t\t\tlet q = `ALTER TABLE \\`${model.def.tableName}\\` ADD CONSTRAINT \\`${model.def.tableName}_${\n\t\t\t\t\t\tthis.models[link.val.model].def.tableName\n\t\t\t\t\t}_${link.key}_fk\\` FOREIGN KEY (\\`${link.key}\\`) REFERENCES \\`${this.models[link.val.model].def.tableName}\\`(\\`${\n\t\t\t\t\t\tthis.models[link.val.model].primary\n\t\t\t\t\t}\\`) ON DELETE ${link.val.onDelete} ON UPDATE ${link.val.onUpdate}`;\n\t\t\t\t\tconsole.warn(q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync createTable(def) {\n\t\tlet what = [];\n\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\t// console.log(\"field, fieldName\", field, fieldName);\n\t\t\tif (field.model) {\n\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\tif (f) what.push(fieldName + \" \" + this._ormTypeToDatabaseType(f[0], f[1]));\n\t\t\t} else {\n\t\t\t\twhat.push(\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\t\tthis._getIndex(field) +\n\t\t\t\t\t\tthis._getDefault(field)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlet q = \"CREATE TABLE IF NOT EXISTS \" + def.tableName + \" (\" + what.join(\", \") + \")\";\n\t\tconsole.warn(\"q\", q);\n\t\tawait this.connection.query(q);\n\t}\n\tasync updateTable(def) {\n\t\tlet describe = await this.connection.query(\"DESCRIBE \" + def.tableName + \"\");\n\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\tlet type1 = null;\n\t\t\tif (field.model) {\n\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\tif (f) {\n\t\t\t\t\ttype1 = this._ormTypeToDatabaseType(f[0], f[1]);\n\t\t\t\t\tfield.type = f[0];\n\t\t\t\t\tfield.length = f[1];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttype1 = this._ormTypeToDatabaseType(field.type, field.length);\n\t\t\t}\n\t\t\tlet type2 = null,\n\t\t\t\tdef2 = null;\n\n\t\t\tfor (let iRow = 0; iRow < describe.length; iRow++) {\n\t\t\t\tconst row = describe[iRow];\n\t\t\t\tif (row.Field == fieldName) {\n\t\t\t\t\ttype2 = row.Type;\n\t\t\t\t\tdef2 = row.Default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type2 === null) {\n\t\t\t\tif (field.model) {\n\t\t\t\t\tlet f = this._getJoinedModel(field);\n\t\t\t\t\tfield.type = f[0];\n\t\t\t\t\tfield.length = f[1];\n\t\t\t\t}\n\t\t\t\tlet q =\n\t\t\t\t\t\"ALTER TABLE \" +\n\t\t\t\t\tdef.tableName +\n\t\t\t\t\t\" ADD \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\tthis._getIndex(field) +\n\t\t\t\t\tthis._getDefault(field);\n\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\tawait this.connection.query(q);\n\t\t\t} else if (\n\t\t\t\ttype1 &&\n\t\t\t\ttype2 &&\n\t\t\t\t(type1.toLowerCase() != type2.toLowerCase() || (def2 != field.defaultsTo && type1.toLowerCase() != \"text\"))\n\t\t\t) {\n\t\t\t\tlet q =\n\t\t\t\t\t\"ALTER TABLE \" +\n\t\t\t\t\tdef.tableName +\n\t\t\t\t\t\" CHANGE \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tfieldName +\n\t\t\t\t\t\" \" +\n\t\t\t\t\tthis._ormTypeToDatabaseType(field.type, field.length) +\n\t\t\t\t\tthis._getNotnull(field) +\n\t\t\t\t\tthis._getDefault(field);\n\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\tawait this.connection.query(q);\n\t\t\t}\n\t\t}\n\t}\n\tasync synchronize(def) {\n\t\tlet exists = true;\n\n\t\tlet rows1 = await this.connection.query(\"SELECT * FROM \" + def.tableName + \" LIMIT 0,1\");\n\t\tif (rows1 && this.config.migrate == \"recreate\") await this.connection.query(\"DROP TABLE IF EXISTS \" + def.tableName + \"\");\n\t\tif (rows1 === null || this.config.migrate == \"recreate\") exists = false;\n\n\t\tif (this.config.migrate == \"alter\") {\n\t\t\tif (!exists) await this.createTable(def);\n\t\t\telse await this.updateTable(def);\n\n\t\t\tlet rows2 = await this.connection.query(\"SHOW INDEX FROM \" + def.tableName + \"\");\n\t\t\tfor (const [fieldName, field] of Object.entries(def.attributes)) {\n\t\t\t\tlet createIndex = false;\n\t\t\t\tif (field.model || field.index) {\n\t\t\t\t\tcreateIndex = true;\n\t\t\t\t\tfor (let iRows = 0; iRows < rows2.length; iRows++) {\n\t\t\t\t\t\tconst row2 = rows2[iRows];\n\t\t\t\t\t\tif (row2.Column_name == fieldName) createIndex = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (createIndex) {\n\t\t\t\t\tlet q = \"ALTER TABLE \" + def.tableName + \" ADD INDEX (\" + fieldName + \")\";\n\t\t\t\t\tconsole.warn(\"q\", q);\n\t\t\t\t\tawait this.connection.query(q);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t_ormTypeToDatabaseType(ormtype, length, info) {\n\t\tif (!info) info = \"type\";\n\t\tlet typeJS = \"\";\n\t\tormtype = ormtype.toLowerCase();\n\t\tlet res = \"\";\n\t\tif (ormtype == \"int\" || ormtype == \"integer\") {\n\t\t\tif (!length) length = 11;\n\t\t\tres = \"INT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"tinyint\") {\n\t\t\tif (!length) length = 4;\n\t\t\tres = \"TINYINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"smallint\") {\n\t\t\tif (!length) length = 6;\n\t\t\tres = \"SMALLINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"mediumint\") {\n\t\t\tif (!length) length = 9;\n\t\t\tres = \"MEDIUMINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"year\") {\n\t\t\tif (!length) length = 4;\n\t\t\tres = \"YEAR(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"float\") {\n\t\t\tres = \"FLOAT\";\n\t\t\tif (length) res += \"(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"double\") {\n\t\t\tres = \"DOUBLE\";\n\t\t\ttypeJS = \"number\";\n\n\t\t\t// } else if (ormtype=='timestamp') {\n\t\t\t//     res = 'TIMESTAMP' ;\n\t\t} else if (ormtype == \"date\") {\n\t\t\tres = \"DATE\";\n\t\t\ttypeJS = \"date\";\n\t\t} else if (ormtype == \"datetime\") {\n\t\t\tres = \"DATETIME\";\n\t\t\ttypeJS = \"date\";\n\t\t} else if (ormtype == \"char\") {\n\t\t\tif (!length) length = 1;\n\t\t\tres = \"CHAR(\" + length + \")\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"varchar\" || ormtype == \"string\") {\n\t\t\tif (!length) length = 255;\n\t\t\tres = \"VARCHAR(\" + length + \")\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"tinytext\") {\n\t\t\tres = \"TINYTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"mediumtext\") {\n\t\t\tres = \"MEDIUMTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"longtext\") {\n\t\t\tres = \"LONGTEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"text\" || ormtype == \"json\") {\n\t\t\tres = \"TEXT\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"enum\") {\n\t\t\tres = \"ENUM\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"set\") {\n\t\t\tres = \"SET\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"decimal\" || ormtype == \"price\") {\n\t\t\tif (!length) length = \"10,2\";\n\t\t\tres = \"DECIMAL(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"bigint\") {\n\t\t\tif (!length) length = 20;\n\t\t\tres = \"BIGINT(\" + length + \")\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"time\") {\n\t\t\tres = \"TIME\";\n\t\t\ttypeJS = \"number\";\n\t\t} else if (ormtype == \"tinyblob\") {\n\t\t\tres = \"TINYBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"mediumblob\") {\n\t\t\tres = \"MEDIUMBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"longblob\") {\n\t\t\tres = \"LONGBLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"blob\") {\n\t\t\tres = \"BLOB\";\n\t\t\ttypeJS = \"string\";\n\t\t} else if (ormtype == \"binary\") {\n\t\t\tres = \"BINARY\";\n\t\t\ttypeJS = \"binary\";\n\t\t} else if (ormtype == \"varbinary\") {\n\t\t\tres = \"VARBINARY\";\n\t\t\ttypeJS = \"binary\";\n\t\t} else if (ormtype == \"bit\") {\n\t\t\tres = \"BIT\";\n\t\t\ttypeJS = \"boolean\";\n\t\t} else if (ormtype == \"boolean\") {\n\t\t\tres = \"TINYINT(4)\";\n\t\t\ttypeJS = \"boolean\";\n\t\t}\n\n\t\tif (info == \"typejs\") return typeJS;\n\t\telse return res;\n\t}\n\t_getIndex(field) {\n\t\tlet res = \"\";\n\t\tif (field.primary) res += \" PRIMARY KEY\";\n\t\tif (field.autoincrement) res += \" AUTO_INCREMENT\";\n\t\treturn res;\n\t}\n\t_getNotnull(field) {\n\t\tlet res = \"\";\n\t\tif (field.notnull || typeof field.notnull == \"undefined\") res = \" NOT NULL\";\n\t\telse res = \" NULL\";\n\t\treturn res;\n\t}\n\t_getDefault(field) {\n\t\tlet defaultsTo = \"\";\n\t\tif (typeof field.defaultsTo !== \"undefined\") {\n\t\t\tdefaultsTo = ' DEFAULT \"' + field.defaultsTo + '\"';\n\t\t\tif (field.type == \"boolean\" && (field.defaultsTo === true || field.defaultsTo === \"true\")) defaultsTo = \" DEFAULT 1\";\n\t\t\tif (field.type == \"boolean\" && (field.defaultsTo === false || field.defaultsTo === \"false\")) defaultsTo = \" DEFAULT 0\";\n\t\t}\n\t\treturn defaultsTo;\n\t}\n\t_getJoinedModel(field) {\n\t\tif (this.models[field.model]) {\n\t\t\treturn [this.models[field.model].primaryType, this.models[field.model].primaryLength];\n\t\t} else {\n\t\t\tconsole.warn(\"Model \" + field.model + \" not found\");\n\t\t}\n\t\treturn null;\n\t}\n\tgetModels() {\n\t\treturn this.models;\n\t}\n})();\n\nfunction Model(models = []) {\n\tif (models instanceof Array) {\n\t} else models = [models];\n\treturn function decorator(target) {\n\t\tif (!target.prototype._models) target.prototype._models = [];\n\t\ttarget.prototype._models = [...target.prototype._models, ...models];\n\t};\n}\n\nconst Migration = new (class {\n\tdropTable(tableName) {}\n\tdropField(tableName, fieldName) {}\n\trenameField(model, oldField, newField) {}\n\texec() {}\n})();\n\nconst Models = DbMysql.models;\nexport { DbMysql, Model, Models, Migration };\n"],"file":"DbMysql.js"}