{"version":3,"sources":["../src/Controller.js"],"names":["createCsvWriter","require","createObjectCsvWriter","Controller","constructor","populateOnFind","describeRoutes","_routes","forEach","route","console","warn","method","toUpperCase","url","controllerName","name","_addRoutes","App","req","res","next","timer","Date","on","diff","format","_middlewares","middlewareName","mid","Middlewares","find","m","fn","bind","model","sendData","rows","total","findExec","data","meta","exportcsv","header","Object","entries","def","attributes","index","field","defField","title","t","split","length","shift","join","toExport","push","id","dest","process","cwd","fs","ensureDirSync","modelname","csvWriter","path","writeRecords","then","readStream","createReadStream","pipe","findone","row","findoneExec","create","createExec","update","updateExec","destroy","err","Services","oldrow","destroyExec","findCreateOrderBy","orderby","query","sort","orderSort","order_sort","replace","debug","debugQuery","findCreateLimit","limit","skip","findCreateWhere","where","whereData","findCreateWhereForField","tx","value","type","indexOf","substring","what","r","limitreq","orderBy","toexec","populate","populateAll","exec","count","createEmpty","primary","params","_compareData","oldData","newData","compare","keyoldval","oldval","undefined","newval","isNaN","valueOf","toString","Array","isArray","JSON","stringify","isObject","o","prototype","call","_checkPopulateSended","newrow","body","alias","modelToJoin","Models","modellogevents","updateone","updateDeleteField","d","before","policy","render","page","loadControllers","Config","app","mode","controllerFiles","globule","chalk","yellow","i","controllerFile","obj","constructorFn","c"],"mappings":"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","sourcesContent":["import globule from \"globule\";\nimport dayjs from \"dayjs\";\nimport chalk from \"chalk\";\nimport fs from \"fs-extra\";\n\nimport { App } from \"./App\";\nimport { Services } from \"./Services\";\nimport { Middlewares } from \"./Middlewares\";\nimport { Models } from \"./DbMysql\";\nimport { Config } from \"./Config\";\n\nconst createCsvWriter = require(\"csv-writer\").createObjectCsvWriter; // pour  écrite des fichiers .csv\n// function Crud(url) {\n// \treturn function decorator(target) {\n// \t\ttarget.prototype.isCrud = url;\n// \t};\n// }\n\nclass Controller {\n\tconstructor() {\n\t\tthis.populateOnFind = true;\n\t}\n\tdescribeRoutes() {\n\t\tthis._routes.forEach((route) => {\n\t\t\tconsole.warn(`- ${route.method.toUpperCase()} ${route.url} > ${route.controllerName} > ${route.name}()`);\n\t\t});\n\t}\n\t_addRoutes() {\n\t\tthis._routes.forEach((route) => {\n\t\t\tApp[route.method](route.url, (req, res, next) => {\n\t\t\t\tlet timer = new Date();\n\t\t\t\treq.on(\"end\", (...args) => {\n\t\t\t\t\tlet diff = dayjs().diff(timer);\n\t\t\t\t\tif (diff > 1000) diff = diff / 1000 + \"s\";\n\t\t\t\t\telse diff += \"ms\";\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tconsole.warn(`${dayjs().format(\"YYYY-MM-DD HH:mm:ss\")} - GET ${route.url} - ${diff}`);\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t});\n\t\t\tif (this._middlewares) {\n\t\t\t\tthis._middlewares.forEach((middlewareName) => {\n\t\t\t\t\tlet mid = Middlewares.find((m) => {\n\t\t\t\t\t\treturn m.name == middlewareName;\n\t\t\t\t\t});\n\t\t\t\t\tif (mid) App[route.method](route.url, mid.fn.bind(this));\n\t\t\t\t});\n\t\t\t}\n\t\t\tApp[route.method](route.url, route.fn.bind(this));\n\t\t});\n\t\tthis.describeRoutes();\n\t}\n\n\tasync find(req, res) {\n\t\tif (!this.model) return this.res.sendData(\"model_not_defined\");\n\t\tlet { rows, total } = await this.findExec();\n\t\tthis.res.sendData({ data: rows, meta: { total: total } });\n\t}\n\tasync exportcsv(req, res) {\n\t\tif (!this.model) return this.res.sendData(\"model_not_defined\");\n\t\tlet { rows } = await this.findExec(); //, total\n\n\t\tlet header = [];\n\t\tObject.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t\tlet title = field;\n\t\t\tlet t = field.split(\"_\");\n\t\t\tif (t.length > 1) {\n\t\t\t\tt.shift();\n\t\t\t\ttitle = t.join(\"_\");\n\t\t\t}\n\t\t\t// fields not exported\n\t\t\tif (\n\t\t\t\ttitle === \"password\" ||\n\t\t\t\ttitle === \"accesstoken\" ||\n\t\t\t\ttitle === \"accesstokenexpire\" ||\n\t\t\t\ttitle === \"refreshtoken\" ||\n\t\t\t\ttitle === \"forgetpassdate\"\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tif (defField.toExport === false) return;\n\t\t\theader.push({ id: field, title });\n\t\t});\n\n\t\tlet dest = process.cwd() + \"/uploads/temp/\";\n\t\tfs.ensureDirSync(dest);\n\t\tdest += \"export-\" + this.model.def.modelname + \".csv\";\n\t\tconst csvWriter = createCsvWriter({\n\t\t\tpath: dest,\n\t\t\theader: header,\n\t\t});\n\t\tcsvWriter\n\t\t\t.writeRecords(rows) // returns a promise\n\t\t\t.then(() => {\n\t\t\t\t//console.log(\"...Done\");\n\t\t\t\tres.header(\"content-disposition\", \"attachment; filename=export-csv-\" + this.model.def.modelname + \".csv\");\n\t\t\t\tlet readStream = fs.createReadStream(dest);\n\t\t\t\treadStream.pipe(res);\n\t\t\t});\n\t\t// this.res.sendData({ data: rows, meta: { total: total } });\n\t}\n\tasync findone(req, res) {\n\t\tif (!this.model) return res.sendData(res, \"model_not_defined\");\n\t\tlet row = await this.findoneExec(req);\n\t\tif (!row) return res.sendData(\"not_found\");\n\t\tres.sendData({ data: row });\n\t}\n\tasync create(req, res) {\n\t\tif (!this.model) return res.sendData(\"model_not_defined\");\n\t\tlet row = await this.createExec();\n\t\tif (!row) return res.sendData(\"insert_error\");\n\t\tres.sendData({ data: row });\n\t}\n\tasync update(req, res) {\n\t\tif (!this.model) return res.sendData(\"model_not_defined\");\n\t\tlet row = await this.updateExec();\n\t\tif (!row) return res.sendData(\"not_found\");\n\t\tres.sendData({ data: row });\n\t}\n\tasync destroy(req, res) {\n\t\tif (!this.model) return res.sendData({ err: Services.err(501), data: null });\n\t\tlet oldrow = await this.destroyExec();\n\t\tif (!oldrow) return res.sendData(\"not_found\");\n\t\tres.sendData({ data: oldrow });\n\t}\n\n\tasync findCreateOrderBy(req) {\n\t\tlet orderby = \"\";\n\t\tif (req.query.sort) {\n\t\t\tlet orderSort = \"\";\n\t\t\tif (req.query.order_sort) orderSort = req.query.order_sort.replace(/\\\\/g, \"\");\n\t\t\torderby = \" order by \" + req.query.sort.replace(/\\\\/g, \"\") + \" \" + orderSort;\n\t\t}\n\t\treturn orderby;\n\t}\n\tdebug() {\n\t\tthis.debugQuery = true;\n\t\treturn this;\n\t}\n\tasync findCreateLimit(req) {\n\t\tlet limit = 0,\n\t\t\tskip = 0;\n\t\tif (req.query.skip && req.query.skip != \"NaN\" && typeof (req.query.skip * 1) === \"number\") {\n\t\t\tskip = req.query.skip * 1;\n\t\t}\n\t\tif (req.query.limit && req.query.limit != \"NaN\" && typeof (req.query.limit * 1) === \"number\") {\n\t\t\tlimit = req.query.limit * 1;\n\t\t}\n\t\tif (skip > 0 && limit === 0) limit = 1844674407370955161;\n\t\treturn { limit, skip };\n\t}\n\t// remplacer _update et _create par updateexec()\n\tasync findCreateWhere(req) {\n\t\tlet where = \"1=1\",\n\t\t\twhereData = [];\n\t\tfunction findCreateWhereForField(tx, field, value, defField) {\n\t\t\tif (defField.type == \"boolean\" && value === \"true\") value = 1;\n\t\t\tif (defField.type == \"boolean\" && value === \"false\") value = 0;\n\t\t\tif (value.indexOf(\"contains:\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} like ?`;\n\t\t\t\twhereData.push(\"%\" + value.substring(9) + \"%\");\n\t\t\t} else if (value.indexOf(\"startwith:\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} like ?`;\n\t\t\t\twhereData.push(value.substring(10) + \"%\");\n\t\t\t} else if (value.indexOf(\"endwith:\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} like ?`;\n\t\t\t\twhereData.push(\"%\" + value.substring(8));\n\t\t\t} else if (value.indexOf(\">=\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} >= ?`;\n\t\t\t\twhereData.push(value.substring(2));\n\t\t\t} else if (value.indexOf(\">\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} > ?`;\n\t\t\t\twhereData.push(value.substring(1));\n\t\t\t} else if (value.indexOf(\"<=\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} <= ?`;\n\t\t\t\twhereData.push(value.substring(2));\n\t\t\t} else if (value.indexOf(\"<\") === 0) {\n\t\t\t\twhere += ` && ${tx}.${field} < ?`;\n\t\t\t\twhereData.push(value.substring(1));\n\t\t\t} else {\n\t\t\t\twhere += ` && ${tx}.${field} = ?`;\n\t\t\t\twhereData.push(req.query[field]);\n\t\t\t}\n\t\t}\n\n\t\tObject.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t\tif (req.query[field]) findCreateWhereForField(\"t1\", field, req.query[field] + \"\", defField);\n\t\t\tif (req.query[field + \"_\"]) findCreateWhereForField(\"t1\", field, req.query[field + \"_\"], defField);\n\t\t\tif (req.query[field + \"__\"]) findCreateWhereForField(\"t1\", field, req.query[field + \"__\"], defField);\n\t\t\tif (req.query[field + \"___\"]) findCreateWhereForField(\"t1\", field, req.query[field + \"___\"], defField);\n\t\t});\n\t\treturn { where, whereData };\n\t}\n\n\t// async findWhere(fn) {\n\t// \tthis._findWhere = fn;\n\t// }\n\t// async findLimit(fn) {\n\t// \tthis._findLimit = fn;\n\t// }\n\t// async findOrderBy(fn) {\n\t// \tthis._findOrderBy = fn;\n\t// }\n\tasync findExec(what = {}) {\n\t\tlet req = this.req;\n\t\tlet { where, whereData } = await this.findCreateWhere(req);\n\t\tif (what.where) {\n\t\t\tlet r = await what.where(where, whereData);\n\t\t\twhere = r.where;\n\t\t\twhereData = r.whereData;\n\t\t}\n\t\tlet { limit, skip } = await this.findCreateLimit(req);\n\t\tif (what.limit) {\n\t\t\tlet r = await what.limit(limit, skip);\n\t\t\tlimit = r.limit;\n\t\t\tskip = r.skip;\n\t\t}\n\t\tlet limitreq = limit || skip ? ` limit ${skip},${limit}` : \"\";\n\t\tlet orderby = await this.findCreateOrderBy(req);\n\t\tif (what.orderBy) orderby = await what.orderBy(orderby);\n\t\t// eslint-disable-next-line\n\t\tlet toexec = this.model.find(where + orderby + limitreq, whereData);\n\t\tif (this.debugQuery) {\n\t\t\tconsole.warn(\"where + orderby + limitreq, whereData\", where + orderby + limitreq, whereData);\n\t\t\ttoexec.debug();\n\t\t}\n\t\t// if (this.populateOnFind) {\n\t\t// Object.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t// \tif (defField.model) toexec.populate(defField.alias);\n\t\t// });\n\t\t// morePopulate.forEach((field) => {\n\t\t// \ttoexec.populate(field);\n\t\t// });\n\t\tif (what.populate) {\n\t\t\twhat.populate.forEach((field) => {\n\t\t\t\ttoexec.populate(field);\n\t\t\t});\n\t\t} else toexec.populateAll();\n\t\t// }\n\t\tlet rows = await toexec.exec();\n\t\tlet total = rows.length;\n\t\tif (limit) {\n\t\t\tlet toexec = this.model.count(where + orderby, whereData);\n\t\t\tif (this.populateOnFind) {\n\t\t\t\tObject.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t\t\t\tif (defField.model) toexec.populate(field);\n\t\t\t\t});\n\t\t\t}\n\t\t\ttotal = await toexec.exec();\n\t\t}\n\t\treturn { rows, total };\n\t}\n\n\tcreateEmpty(req) {\n\t\tlet row = this.model.createEmpty();\n\t\trow[this.model.primary] = \"\";\n\t\treturn row;\n\t}\n\n\tasync findoneExec(what = {}) {\n\t\tlet where = \"\",\n\t\t\twhereData = [],\n\t\t\trow,\n\t\t\treq = this.req,\n\t\t\tid = req.params.id || req.params[this.model.primary];\n\n\t\tif (id * 1 < 0) {\n\t\t\trow = this.createEmpty(req);\n\t\t} else {\n\t\t\twhere += `t1.${this.model.primary}=?`;\n\t\t\twhereData.push(id);\n\t\t\tlet toexec = this.model.findone(where, whereData);\n\t\t\t// Object.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t\t// \tif (defField.model) toexec.populate(field);\n\t\t\t// });\n\t\t\t// morePopulate.forEach((field) => {\n\t\t\t// \ttoexec.populate(field);\n\t\t\t// });\n\t\t\trow = await toexec.populateAll().exec();\n\t\t}\n\t\treturn row;\n\t}\n\n\t_compareData(oldData, newData) {\n\t\tvar compare = {};\n\t\tObject.entries(oldData).forEach(([keyoldval, oldval], index) => {\n\t\t\tif (keyoldval == \"updatedAt\") return;\n\t\t\tif (keyoldval == \"createdAt\") return;\n\t\t\tif (newData[keyoldval] == undefined) return;\n\t\t\tvar newval = newData[keyoldval];\n\t\t\tif (!oldval && !newval) return;\n\t\t\tif (oldval && oldval instanceof Date && !isNaN(oldval.valueOf())) oldval = oldval.toString();\n\t\t\tif (newval && newval instanceof Date && !isNaN(newval.valueOf())) newval = newval.toString();\n\t\t\tif (Array.isArray(oldval)) oldval = JSON.stringify(oldval);\n\t\t\tif (Array.isArray(newval)) newval = JSON.stringify(newval);\n\t\t\tif (this.isObject(oldval)) oldval = JSON.stringify(oldval);\n\t\t\tif (this.isObject(newval)) newval = JSON.stringify(newval);\n\t\t\tif (newval != oldval) {\n\t\t\t\tcompare[keyoldval + \"_old\"] = oldval;\n\t\t\t\tcompare[keyoldval + \"_new\"] = newval;\n\t\t\t}\n\t\t});\n\t\treturn compare;\n\t}\n\tisObject(o) {\n\t\treturn Object.prototype.toString.call(o) === \"[object Object]\";\n\t}\n\n\tasync createExec() {\n\t\tlet req = this.req;\n\t\tthis._checkPopulateSended(req);\n\t\tlet newrow = await this.model.create(req.body).exec(true);\n\t\tif (!newrow) return null;\n\t\treq.params.id = newrow[this.model.primary];\n\t\t// if (this.modellogevents) await this._log(req, \"create\", null, newrow);\n\t\treturn await this.findoneExec(req);\n\t}\n\n\t_checkPopulateSended(req) {\n\t\tObject.entries(this.model.def.attributes).forEach(([field, defField], index) => {\n\t\t\tif (defField.model) {\n\t\t\t\t// if (req.body[field] && this.isObject(req.body[field])) {\n\t\t\t\t// \tlet modelToJoin = global[defField.model];\n\t\t\t\t// \tif (modelToJoin.primary) req.body[field] = req.body[field][modelToJoin.primary];\n\t\t\t\t// }\n\t\t\t\tif (req.body[defField.alias] && this.isObject(req.body[defField.alias])) {\n\t\t\t\t\tlet modelToJoin = Models[defField.model];\n\t\t\t\t\tif (modelToJoin.primary) req.body[field] = req.body[defField.alias][modelToJoin.primary];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync updateExec() {\n\t\tlet req = this.req,\n\t\t\tid = req.params.id || req.params[this.model.primary],\n\t\t\twhere = `${this.model.primary}=?`,\n\t\t\twhereData = [id],\n\t\t\toldrow;\n\t\tif (this.modellogevents) {\n\t\t\toldrow = await this.model.findone(where, whereData).exec();\n\t\t\tif (!oldrow) return null;\n\t\t}\n\t\tdelete req.body[this.model.primary];\n\n\t\tthis._checkPopulateSended(req);\n\t\tlet row = await this.model.updateone(where, whereData, req.body).exec();\n\t\tif (!row) return null;\n\t\t// if (row.length) newrow = row[0];\n\t\t// if (this.modellogevents) await this._log(req, \"update\", oldrow, newrow);\n\n\t\treturn await this.findoneExec(req);\n\t}\n\n\tasync destroyExec(updateDeleteField = false) {\n\t\tlet where = \"\",\n\t\t\twhereData = [],\n\t\t\toldrow,\n\t\t\tid = this.req.params.id || this.req.params[this.model.primary];\n\t\twhere = `${this.model.primary}=?`;\n\t\twhereData = id;\n\n\t\toldrow = await this.model.findone(where, whereData).exec();\n\t\tif (!oldrow) return null;\n\t\t// if (this.modellogevents) await this._log(req, \"destroy\", oldrow, null);\n\n\t\tif (updateDeleteField === false) {\n\t\t\tawait this.model.destroy(where, whereData).exec();\n\t\t} else {\n\t\t\tlet d = {};\n\t\t\td[updateDeleteField] = true;\n\t\t\tawait this.model.update(where, whereData, d).exec();\n\t\t}\n\t\treturn oldrow;\n\t}\n\t// async _log(req, modelEvent, oldrow, newrow) {\n\t// \tlet id = req.params.id || req.params[this.model.primary];\n\t// \tlet c = \"\";\n\t// \tif (modelEvent == \"create\") c = newrow;\n\t// \telse if (modelEvent == \"destroy\") c = oldrow;\n\t// \telse if (modelEvent == \"update\") c = this._compareData(oldrow, newrow);\n\t// \tawait Logs.create({\n\t// \t\tus_id_user: req.user ? req.user.us_id : 0,\n\t// \t\tlg_model_event: modelEvent,\n\t// \t\tlg_model_name: this.modelname,\n\t// \t\tlg_model_id: id,\n\t// \t\tlg_data: c,\n\t// \t}).exec();\n\t// }\n\n\tasync before(req, res) {}\n\tasync policy(req, res) {\n\t\treturn true;\n\t}\n\n\trender(page, params) {\n\t\tthis.res.render(page, params);\n\t}\n}\n\nasync function loadControllers() {\n\tlet where = \"/src\";\n\tif (Config.app.mode == \"production\") where = \"/lib\";\n\tlet controllerFiles = globule.find(`${process.cwd()}${where}/**/*.controller.js`);\n\tconsole.warn(chalk.yellow(`@Info - Routes list :`));\n\tfor (let i = 0; i < controllerFiles.length; i++) {\n\t\t// let d = new Date();\n\t\tconst controllerFile = controllerFiles[i];\n\t\tlet obj = await import(controllerFile);\n\t\tObject.entries(obj).forEach(([name, constructorFn], index) => {\n\t\t\tlet c = new constructorFn();\n\t\t\tc._addRoutes();\n\t\t});\n\t\t// console.log(\"d oooo\", new Date() - d);\n\t}\n}\n\nexport { Controller, loadControllers };\n"],"file":"Controller.js"}