{"version":3,"sources":["../src/Middlewares.js"],"names":["Middlewares","Middleware","middlewares","Array","target","name","descriptor","original","value","continuePlease","args","_middlewaresByRoute","iMid","middlewareName","mid","find","m","isCalled","next","fn","apply","console","warn","length","e","prototype","_middlewares","loadRoutesMiddlewares","chalk","yellow","where","Config","app","mode","middlewareFiles","globule","process","cwd","i","middlewareFile","obj","Object","entries","forEach","index","constructorFn","push"],"mappings":"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","sourcesContent":["import globule from \"globule\";\nimport chalk from \"chalk\";\nimport { Config } from \"./Config\";\n\nconst Middlewares = [];\n\nfunction Middleware(middlewares = []) {\n\tif (middlewares instanceof Array) {\n\t} else middlewares = [middlewares];\n\treturn function (target, name, descriptor) {\n\t\tif (name) {\n\t\t\tconst original = descriptor.value;\n\t\t\tif (typeof original === \"function\") {\n\t\t\t\tdescriptor.value = async function (...args) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet continuePlease = true;\n\t\t\t\t\t\tif (target._middlewaresByRoute && target._middlewaresByRoute[name]) {\n\t\t\t\t\t\t\tfor (let iMid = 0; iMid < target._middlewaresByRoute[name].length; iMid++) {\n\t\t\t\t\t\t\t\tconst middlewareName = target._middlewaresByRoute[name][iMid];\n\t\t\t\t\t\t\t\tlet mid = Middlewares.find((m) => m.name == middlewareName);\n\t\t\t\t\t\t\t\tif (mid) {\n\t\t\t\t\t\t\t\t\tlet isCalled = false;\n\t\t\t\t\t\t\t\t\tconst next = function () {\n\t\t\t\t\t\t\t\t\t\tisCalled = true;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tawait mid.fn.apply(this, [args[0], args[1], next]);\n\t\t\t\t\t\t\t\t\tif (!isCalled) {\n\t\t\t\t\t\t\t\t\t\tcontinuePlease = false;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.warn(`Middleware '${middlewareName}' not found.`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (continuePlease) await original.apply(this, args);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!target._middlewaresByRoute) target._middlewaresByRoute = {};\n\t\t\t\tif (!target._middlewaresByRoute[name]) target._middlewaresByRoute[name] = [];\n\t\t\t\ttarget._middlewaresByRoute[name] = [...target._middlewaresByRoute[name], ...middlewares];\n\t\t\t}\n\t\t\treturn descriptor;\n\t\t} else {\n\t\t\tif (!target.prototype._middlewares) target.prototype._middlewares = [];\n\t\t\ttarget.prototype._middlewares = [...target.prototype._middlewares, ...middlewares];\n\t\t}\n\t};\n}\n\nasync function loadRoutesMiddlewares() {\n\tconsole.warn(chalk.yellow(`@Info - Middlewares availables :`));\n\tlet where = \"/src\";\n\tif (Config.app.mode == \"production\") where = \"/lib\";\n\tlet middlewareFiles = globule.find(process.cwd() + where + \"/**/*.middleware.js\");\n\tfor (let i = 0; i < middlewareFiles.length; i++) {\n\t\tconst middlewareFile = middlewareFiles[i];\n\t\tlet obj = await import(middlewareFile);\n\t\t// let d = new Date();\n\n\t\tObject.entries(obj).forEach(([name, constructorFn], index) => {\n\t\t\tMiddlewares.push({ name, fn: constructorFn });\n\t\t\tconsole.warn(`- ${name}()`);\n\t\t});\n\t\t// console.log(\"d oooo\", new Date() - d);\n\t}\n}\n\nexport { Middlewares, Middleware, loadRoutesMiddlewares };\n"],"file":"Middlewares.js"}