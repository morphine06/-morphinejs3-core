{"version":3,"sources":["../src/DbTableExec.js"],"names":["_","require","dayjs","module","exports","DbTableExec","constructor","table","DbMysql","def","modelname","selected","command","connection","returnCompleteRow","primary","primaryType","primaryLength","where","whereData","onlyOne","order","having","groupby","tabAlreadyIncluded","logQuery","catchErr","iscount","joinModels","fieldJoin","modelnameto","modelalias","fieldName","field","Object","entries","attributes","type","length","select","fields","find","undefined","count","findone","create","data","cloneDeep","what","JSON","parse","stringify","update","original_where","original_whereData","updateone","query","querySaved","destroy","_searchModelFromFieldName","fromModelName","f","models","model","log","catchError","returnRow","populate","fieldJoinName","tabFieldsJoins","split","previousModelName","previousModelAlias","tabOrigin","forEach","join","push","modeltolink","modelaliasto","origin","alias","orderBy","groupBy","_createWhere","fromUpdate","Number","isInteger","isKey","indexOf","concat","index","key","val","_createSelect","tabSelect","each","num","as","_createJoin","tabJoin","tableName","_createOrder","_createSelectQuery","_createInsertQuery","vals","autoincrement","hasOwnProperty","defaultsTo","_createUpdateQuery","_createDestroyQuery","_preTreatment","isObject","e","console","warn","Date","format","m","isValid","_postTreatment","rows","row","obj","previousObj","lastO","o","_beforeQuery","fn","fn2","useUpdatedAt","updatedAt","updatedAtForced","beforeUpdate","beforeDestroy","useCreatedAt","createdAt","createdAtForced","beforeCreate","beforeSelect","exec","debug","error","postTreatmentMain","res","affectedRows","insertId","cmpt","rows2","ftemp"],"mappings":"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","sourcesContent":["// var DbMysql = require(\"./DbMysql.server\");\nvar _ = require(\"lodash\");\nvar dayjs = require(\"dayjs\");\n// console.log(\"DbMysql\", DbMysql);\n\nmodule.exports = class DbTableExec {\n\tconstructor(table) {\n\t\tthis.DbMysql = table.DbMysql;\n\t\tthis.table = table;\n\t\tthis.def = table.def;\n\t\tthis.modelname = this.def.modelname;\n\t\tthis.selected = [];\n\t\tthis.command = \"SELECT\";\n\t\tthis.connection = table.connection;\n\t\tthis.returnCompleteRow = true;\n\t\tthis.primary = \"id\";\n\t\tthis.primaryType = \"integer\";\n\t\tthis.primaryLength = 11;\n\t\tthis.where = \"\";\n\t\tthis.whereData = [];\n\t\tthis.onlyOne = false;\n\t\tthis.order = \"\";\n\t\tthis.having = \"\";\n\t\tthis.groupby = \"\";\n\t\tthis.tabAlreadyIncluded = {};\n\t\tthis.logQuery = false;\n\t\tthis.catchErr = false;\n\t\tthis.iscount = false;\n\t\tthis.joinModels = [{ modelname: this.modelname, fieldJoin: null, modelnameto: null, modelalias: \"t1\" }];\n\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\tif (field.primary) {\n\t\t\t\tthis.primary = fieldName;\n\t\t\t\tthis.primaryType = field.type;\n\t\t\t\tthis.primaryLength = field.length;\n\t\t\t}\n\t\t}\n\t}\n\tselect(fields) {\n\t\tthis.selected = fields;\n\t\treturn this;\n\t}\n\tfind(where, whereData) {\n\t\tthis.command = \"SELECT\";\n\t\tthis.onlyOne = false;\n\t\tthis.where = where;\n\t\tif (whereData === undefined) this.whereData = [];\n\t\telse this.whereData = whereData;\n\t\treturn this;\n\t}\n\tcount(where, whereData) {\n\t\tthis.iscount = true;\n\t\treturn this.find(where, whereData);\n\t}\n\tfindone(where, whereData) {\n\t\tthis.onlyOne = true;\n\t\tthis.where = where;\n\t\tif (whereData === undefined) this.whereData = [];\n\t\telse this.whereData = whereData;\n\t\treturn this;\n\t}\n\tcreate(data) {\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"INSERT\";\n\t\tthis.data = data;\n\t\treturn this;\n\t}\n\tcloneDeep(what) {\n\t\treturn JSON.parse(JSON.stringify(what));\n\t}\n\tupdate(where, whereData, data) {\n\t\tif (data === undefined) {\n\t\t\tdata = whereData;\n\t\t\tthis.whereData = [];\n\t\t} else {\n\t\t\tthis.whereData = whereData;\n\t\t}\n\t\tthis.original_where = this.cloneDeep(where);\n\t\tthis.original_whereData = this.cloneDeep(this.whereData);\n\t\tthis.whereData = [];\n\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"UPDATE\";\n\t\tthis.where = where;\n\t\tthis.data = data;\n\t\t// console.log(\"where,data\", where, data);\n\t\treturn this;\n\t}\n\tupdateone(where, whereData, data) {\n\t\tthis.update(where, whereData, data);\n\t\tthis.onlyOne = true;\n\t\treturn this;\n\t}\n\tquery(query, data) {\n\t\tthis.command = \"QUERY\";\n\t\tthis.whereData = data;\n\t\tthis.querySaved = query;\n\t\treturn this;\n\t}\n\tdestroy(where, whereData = []) {\n\t\tthis.whereData = whereData;\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"DELETE\";\n\t\tthis.where = where;\n\t\treturn this;\n\t}\n\t_searchModelFromFieldName(fieldJoin, fromModelName) {\n\t\tvar f = null;\n\t\tfor (const [fieldName, field] of Object.entries(this.DbMysql.models[fromModelName].def.attributes)) {\n\t\t\tif (fieldName == fieldJoin && field.model) f = field;\n\t\t}\n\t\treturn f;\n\t}\n\tlog() {\n\t\tthis.logQuery = true;\n\t\treturn this;\n\t}\n\tcatchError() {\n\t\tthis.catchErr = true;\n\t\treturn this;\n\t}\n\treturnRow(returnCompleteRow) {\n\t\tthis.returnCompleteRow = returnCompleteRow;\n\t\treturn this;\n\t}\n\tpopulate(fieldJoin, fieldJoinName) {\n\t\t// console.log(\"this.table\", this.table);\n\t\tlet tabFieldsJoins = fieldJoin.split(\".\");\n\t\tlet previousModelName = this.modelname;\n\t\tlet previousModelAlias = \"t1\";\n\t\tlet tabOrigin = [];\n\t\ttabFieldsJoins.forEach((join) => {\n\t\t\ttabOrigin.push(join);\n\t\t\tlet modeltolink = this._searchModelFromFieldName(join, previousModelName);\n\t\t\t// console.log(\"modeltolink\", modeltolink);\n\t\t\tlet modelalias = \"t1\";\n\t\t\tif (modeltolink) {\n\t\t\t\tif (!this.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")]) {\n\t\t\t\t\tmodelalias = \"t\" + (this.joinModels.length + 1);\n\t\t\t\t\tthis.joinModels.push({\n\t\t\t\t\t\tmodelname: modeltolink.model,\n\t\t\t\t\t\tmodelalias: modelalias,\n\t\t\t\t\t\tfieldJoin: join,\n\t\t\t\t\t\tmodelnameto: previousModelName,\n\t\t\t\t\t\tmodelaliasto: previousModelAlias,\n\t\t\t\t\t\torigin: tabOrigin.join(\".\"),\n\t\t\t\t\t\tfieldJoinName: fieldJoinName || modeltolink.alias || null,\n\t\t\t\t\t});\n\t\t\t\t\tthis.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")] = modelalias;\n\t\t\t\t} else {\n\t\t\t\t\tmodelalias = this.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")];\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreviousModelName = modeltolink.model;\n\t\t\tpreviousModelAlias = modelalias;\n\t\t});\n\t\treturn this;\n\t}\n\torderBy(order) {\n\t\tthis.order = order;\n\t\treturn this;\n\t}\n\tgroupBy(groupby) {\n\t\tthis.groupby = groupby;\n\t\treturn this;\n\t}\n\thaving(having) {\n\t\tthis.having = having;\n\t\treturn this;\n\t}\n\t_createWhere(fromUpdate) {\n\t\tlet where = \"\";\n\t\tif (!this.where) {\n\t\t\twhere = \"1=1\";\n\t\t} else if (Number.isInteger(this.where)) {\n\t\t\twhere += this.primary + \"=?\";\n\t\t\tthis.whereData.push(this.where);\n\t\t} else if (typeof this.where === \"string\") {\n\t\t\tvar isKey = true;\n\t\t\tif (this.where.indexOf(\" \") !== -1) isKey = false;\n\t\t\tif (this.where.indexOf(\">\") !== -1) isKey = false;\n\t\t\tif (this.where.indexOf(\"<\") !== -1) isKey = false;\n\t\t\tif (this.where.indexOf(\"=\") !== -1) isKey = false;\n\t\t\tif (isKey) {\n\t\t\t\twhere += this.primary + \"=?\";\n\t\t\t\tthis.whereData.push(this.where);\n\t\t\t} else {\n\t\t\t\twhere = this.where;\n\t\t\t\tif (fromUpdate) {\n\t\t\t\t\tthis.whereData = this.whereData.concat(this.original_whereData);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\twhere += \"1\";\n\t\t\tObject.entries(this.where).forEach(([key, val], index) => {\n\t\t\t\twhere += \" && \" + key + \"=?\";\n\t\t\t\tthis.whereData.push(val);\n\t\t\t});\n\t\t}\n\n\t\treturn where;\n\t}\n\t_createSelect() {\n\t\tvar tabSelect = [];\n\t\t_.each(this.joinModels, (model, num) => {\n\t\t\tfor (const [fieldName] of Object.entries(this.DbMysql.models[model.modelname].def.attributes)) {\n\t\t\t\tlet as = \"\";\n\t\t\t\tif (model.modelnameto) as = \" AS \" + model.modelalias + \"_\" + model.fieldJoin + \"_\" + fieldName;\n\t\t\t\ttabSelect.push(model.modelalias + \".\" + fieldName + as);\n\t\t\t}\n\t\t});\n\t\t// console.log(\"tabSelect\", tabSelect);\n\t\tif (this.selected.length) tabSelect = this.selected;\n\t\treturn tabSelect.join(\", \");\n\t}\n\t_createJoin() {\n\t\tlet tabJoin = [];\n\t\t_.each(this.joinModels, (model, num) => {\n\t\t\tif (!model.modelnameto) tabJoin.push(this.DbMysql.models[model.modelname].def.tableName + \" \" + model.modelalias);\n\t\t\telse\n\t\t\t\ttabJoin.push(\n\t\t\t\t\t\"LEFT JOIN \" +\n\t\t\t\t\t\tthis.DbMysql.models[model.modelname].def.tableName +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tmodel.modelalias +\n\t\t\t\t\t\t\" ON \" +\n\t\t\t\t\t\tmodel.modelalias +\n\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\tthis.DbMysql.models[model.modelname].primary +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tmodel.modelaliasto +\n\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\tmodel.fieldJoin\n\t\t\t\t);\n\t\t});\n\t\treturn tabJoin.join(\" \");\n\t}\n\t_createOrder() {\n\t\tlet order = \"\";\n\t\tif (this.order) order = \" ORDER BY \" + this.order;\n\t\treturn order;\n\t}\n\t_createSelectQuery() {\n\t\tlet query = \"SELECT \" + this._createSelect() + \" FROM \" + this._createJoin() + \" WHERE \" + this._createWhere() + this._createOrder();\n\t\tif (this.iscount) {\n\t\t\tquery =\n\t\t\t\t\"SELECT count(t1.\" + this.primary + \") as cmpt FROM \" + this._createJoin() + \" WHERE \" + this._createWhere() + this._createOrder();\n\t\t\t// console.log(\"query\", query);\n\t\t}\n\t\t// console.log(\"query\", query);\n\t\treturn query;\n\t}\n\t_createInsertQuery() {\n\t\tlet fields = [],\n\t\t\tvals = [];\n\t\t// _.each(this.data, (val, key) => {\n\t\t// \tif (this.def.attributes[key]) {\n\t\t// \t\tfields.push(key);\n\t\t// \t\tvals.push(\"?\");\n\t\t// \t\tthis.whereData.push(val);\n\t\t// \t}\n\t\t// });\n\t\t// console.log(\"this.def.attributes\", this.def.attributes);\n\t\tfor (const [key, val] of Object.entries(this.def.attributes)) {\n\t\t\t// console.log(\"key\", key, val);\n\t\t\tif (val.primary && val.autoincrement) continue;\n\t\t\tfields.push(key);\n\t\t\tvals.push(\"?\");\n\t\t\tif (this.data.hasOwnProperty(key)) {\n\t\t\t\tthis.whereData.push(this.data[key]);\n\t\t\t} else {\n\t\t\t\tif (val.defaultsTo) this.whereData.push(val.defaultsTo);\n\t\t\t\telse {\n\t\t\t\t\tif (\n\t\t\t\t\t\tval.type == \"int\" ||\n\t\t\t\t\t\tval.type == \"integer\" ||\n\t\t\t\t\t\tval.type == \"tinyint\" ||\n\t\t\t\t\t\tval.type == \"smallint\" ||\n\t\t\t\t\t\tval.type == \"mediumint\" ||\n\t\t\t\t\t\tval.type == \"year\" ||\n\t\t\t\t\t\tval.type == \"float\" ||\n\t\t\t\t\t\tval.type == \"double\" ||\n\t\t\t\t\t\tval.type == \"boolean\"\n\t\t\t\t\t)\n\t\t\t\t\t\tthis.whereData.push(0);\n\t\t\t\t\telse this.whereData.push(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// console.log(\"fields,vals\", fields, vals);\n\t\tlet query = \"INSERT INTO \" + this.def.tableName + \"(\" + fields.join(\", \") + \") VALUES (\" + vals.join(\", \") + \")\";\n\t\t// console.log(\"query\", query, this.data);\n\t\treturn query;\n\t}\n\t_createUpdateQuery() {\n\t\tlet vals = [];\n\t\t_.each(this.data, (val, key) => {\n\t\t\tif (this.def.attributes[key]) {\n\t\t\t\tvals.push(key + \"=?\");\n\t\t\t\tthis.whereData.push(val);\n\t\t\t}\n\t\t});\n\t\t// this.original_where, this.original_whereData\n\t\tlet query = \"UPDATE \" + this.def.tableName + \" SET \" + vals.join(\", \") + \" WHERE \" + this._createWhere(true);\n\t\treturn query;\n\t}\n\t_createDestroyQuery() {\n\t\tlet query = \"DELETE FROM \" + this.def.tableName + \" WHERE \" + this._createWhere();\n\t\treturn query;\n\t}\n\t_preTreatment() {\n\t\t// console.log(\"this.data\",this.data);\n\n\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\t// console.log(\"fieldName,field.type\",fieldName,field.type);\n\t\t\tif (this.data[fieldName] === undefined) return;\n\t\t\tlet key = fieldName;\n\t\t\tlet val = this.data[key];\n\t\t\tif (field.type == \"json\" && _.isObject(val)) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[key] = JSON.stringify(this.data[key]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(\"json stringify error\", e);\n\t\t\t\t\tthis.data[key] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (field.type == \"json\" && !_.isObject(val)) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[key] = JSON.parse(this.data[key]);\n\t\t\t\t\t// console.log(\"this.data[key]\",this.data[key]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// console.log(\"json stringify error\",e);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[key] = JSON.stringify(this.data[key]);\n\t\t\t\t\t// console.log(\"this.data[key]\",this.data[key]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(\"json stringify error\", e);\n\t\t\t\t\tthis.data[key] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (field.type == \"boolean\") {\n\t\t\t\tif (this.data[fieldName] === false) this.data[fieldName] = 0;\n\t\t\t\tif (this.data[fieldName] === true) this.data[fieldName] = 1;\n\t\t\t\tif (this.data[fieldName] === \"false\") this.data[fieldName] = 0;\n\t\t\t\tif (this.data[fieldName] === \"true\") this.data[fieldName] = 1;\n\t\t\t}\n\t\t\tif (field.type == \"datetime\" && this.data[fieldName]) {\n\t\t\t\tthis.data[fieldName] = dayjs(new Date(this.data[fieldName])).format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t}\n\t\t\tif (field.type == \"date\" && this.data[fieldName]) {\n\t\t\t\tlet m = dayjs(new Date(this.data[fieldName]));\n\t\t\t\tif (this.data[fieldName] == \"0000-00-00\" || this.data[fieldName] == \"\" || !m.isValid()) this.data[fieldName] = \"0000-00-00\";\n\t\t\t\telse this.data[fieldName] = m.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\tif (field.type == \"datetime\" && this.data[fieldName]) {\n\t\t\t\tlet m = dayjs(new Date(this.data[fieldName]));\n\t\t\t\tif (\n\t\t\t\t\tthis.data[fieldName] == \"0000-00-00\" ||\n\t\t\t\t\tthis.data[fieldName] == \"0000-00-00 00:00:00\" ||\n\t\t\t\t\tthis.data[fieldName] == \"\" ||\n\t\t\t\t\t!m.isValid()\n\t\t\t\t)\n\t\t\t\t\tthis.data[fieldName] = \"0000-00-00 00:00:00\";\n\t\t\t\telse this.data[fieldName] = m.format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t}\n\t\t\t// if (field.type == \"datetime\") {\n\t\t\t// \tif (_.isDate(this.data[fieldName])) this.data[fieldName] = moment(this.data[fieldName]).format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t// }\n\t\t\t// if (field.type == \"date\") {\n\t\t\t// \tif (_.isDate(this.data[fieldName])) this.data[fieldName] = moment(this.data[fieldName]).format(\"YYYY-MM-DD\");\n\t\t\t// }\n\t\t}\n\t}\n\t_postTreatment(rows) {\n\t\t// if (this.iscount) console.log(\"rows\", rows);\n\t\t_.each(rows, (row) => {\n\t\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\t\tif (field.type == \"json\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (row[fieldName]) row[fieldName] = JSON.parse(row[fieldName]);\n\t\t\t\t\t\telse row[fieldName] = null;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(`json parse error - fieldName:\"${fieldName}\" - value:\"${row[fieldName]}\"`);\n\t\t\t\t\t\trow[fieldName] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (field.type == \"boolean\") {\n\t\t\t\t\tif (row[fieldName] === true || row[fieldName] === \"true\" || row[fieldName] === 1 || row[fieldName] === \"1\") row[fieldName] = true;\n\t\t\t\t\telse row[fieldName] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// let alreadyOrigins = [];\n\t\t\t_.each(this.joinModels, (model, num) => {\n\t\t\t\tif (model.modelnameto) {\n\t\t\t\t\t// this._setObjectToRow(row, row, model.modelname, model.modelnameto, model.fieldJoin) ;\n\t\t\t\t\tlet obj = {};\n\n\t\t\t\t\tfor (const [fieldName, field] of Object.entries(this.DbMysql.models[model.modelname].def.attributes)) {\n\t\t\t\t\t\t// let f = DbMysql.models[model.modelname].def.tableName+'_'+model.fieldJoin+'_'+fieldName ;\n\t\t\t\t\t\tlet f = model.modelalias + \"_\" + model.fieldJoin + \"_\" + fieldName;\n\t\t\t\t\t\tif (row.hasOwnProperty(f)) {\n\t\t\t\t\t\t\tif (field.type == \"json\") {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (row[f]) row[f] = JSON.parse(row[f]);\n\t\t\t\t\t\t\t\t\telse row[f] = null;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.warn(\"json parse error\", e, f, row[f]);\n\t\t\t\t\t\t\t\t\trow[f] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tobj[fieldName] = row[f];\n\t\t\t\t\t\t\tdelete row[f];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"model.fieldJoinName\", model.fieldJoinName);\n\t\t\t\t\tif (model.fieldJoinName) {\n\t\t\t\t\t\trow[model.fieldJoinName] = obj;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!obj[this.DbMysql.models[model.modelname].primary]) {\n\t\t\t\t\t\t\t// console.log(\"M_Db.models[model.modelname].primary\",M_Db.models[model.modelname].primary, obj);\n\t\t\t\t\t\t\tobj = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tabFieldsJoins = model.origin.split(\".\");\n\t\t\t\t\t\tlet previousObj = row;\n\t\t\t\t\t\tlet lastO = null;\n\t\t\t\t\t\t_.each(tabFieldsJoins, (o, index) => {\n\t\t\t\t\t\t\tlastO = o;\n\t\t\t\t\t\t\tif (index >= tabFieldsJoins.length - 1) return;\n\t\t\t\t\t\t\tpreviousObj = previousObj[o];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (previousObj) previousObj[lastO] = obj;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tasync _beforeQuery() {\n\t\tlet fn = null,\n\t\t\tfn2 = null;\n\t\tswitch (this.command) {\n\t\t\tcase \"UPDATE\":\n\t\t\t\t// if (this.def.useUpdatedAt && !this.data.updatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.def.useUpdatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.data.updatedAtForced) this.data.updatedAt = this.data.updatedAtForced;\n\t\t\t\tif (this.def.beforeUpdate) fn = this.def.beforeUpdate;\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tif (this.def.beforeDestroy) fn2 = this.def.beforeDestroy;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\t// if (this.def.useCreatedAt && !this.data.createdAt) this.data.createdAt = new Date();\n\t\t\t\t// if (this.def.useUpdatedAt && !this.data.updatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.def.useCreatedAt) this.data.createdAt = new Date();\n\t\t\t\tif (this.def.useUpdatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.data.createdAtForced) this.data.createdAt = this.data.createdAtForced;\n\t\t\t\tif (this.data.updatedAtForced) this.data.updatedAt = this.data.updatedAtForced;\n\t\t\t\tif (this.def.beforeCreate) fn = this.def.beforeCreate;\n\t\t\t\tbreak;\n\t\t\t// case 'REPLACE':\n\t\t\t// if (this.def.beforeCreate) fn = this.def.beforeCreate ;\n\t\t\t// break;\n\t\t\tdefault:\n\t\t\t\tif (this.def.beforeSelect) fn = this.def.beforeSelect;\n\t\t}\n\t\tif (fn) await fn(this.data);\n\t\telse if (fn2) await fn();\n\t}\n\t// async aexec(returnCompleteRow) {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tthis.exec(data => {\n\t// \t\t\tresolve(data);\n\t// \t\t}, returnCompleteRow);\n\t// \t});\n\t// }\n\tasync exec(returnCompleteRow = true) {\n\t\tif (!this.returnCompleteRow) returnCompleteRow = false;\n\t\t// console.log(\"this.command,this.data\",this.command,this.data);\n\t\tthis._beforeQuery();\n\t\t// console.log(\"after\");\n\t\t// console.log(\"this.command\", this.command);\n\t\tlet query;\n\t\tswitch (this.command) {\n\t\t\tcase \"QUERY\":\n\t\t\t\tquery = this.querySaved;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\tthis._preTreatment();\n\t\t\t\tquery = this._createInsertQuery();\n\t\t\t\t// console.log(\"query\", query);\n\t\t\t\tbreak;\n\t\t\tcase \"UPDATE\":\n\t\t\t\tthis._preTreatment();\n\t\t\t\tquery = this._createUpdateQuery();\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tquery = this._createDestroyQuery();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tquery = this._createSelectQuery();\n\t\t}\n\n\t\tif (this.def.debug || this.logQuery) console.warn(\"query\", query, this.whereData);\n\t\tlet rows;\n\t\ttry {\n\t\t\trows = await this.connection.query(query, this.whereData, this.catchErr);\n\t\t\t// console.log(\"rows\", rows);\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t\tlet data = await this.postTreatmentMain(rows, returnCompleteRow);\n\t\treturn data;\n\t\t// }\n\t}\n\tasync postTreatmentMain(rows, returnCompleteRow) {\n\t\t// if (returnCompleteRow) console.log(\"postTreatmentMain\", rows);\n\t\tlet res;\n\t\t// console.log(\"rows\", rows);\n\t\tif (!rows) {\n\t\t\t// console.log('query',query);\n\t\t\t// console.log('whereData',this.whereData);\n\t\t\t// console.warn(\"err\", rows);\n\t\t\tres = {};\n\t\t\tswitch (this.command) {\n\t\t\t\tcase \"QUERY\":\n\t\t\t\t\tres = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"UPDATE\":\n\t\t\t\t\t// res = 0;\n\t\t\t\t\t// if (returnCompleteRow) res = {};\n\t\t\t\t\tres = null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DELETE\":\n\t\t\t\t\tres = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"INSERT\":\n\t\t\t\t\t// this.data[this.primary] = rows.insertId;\n\t\t\t\t\t// res = this.data ;\n\t\t\t\t\tres = null;\n\t\t\t\t\t// if (returnCompleteRow) res = null;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tres = {};\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tswitch (this.command) {\n\t\t\tcase \"QUERY\":\n\t\t\t\tres = rows;\n\t\t\t\tbreak;\n\t\t\tcase \"UPDATE\":\n\t\t\t\tres = rows.affectedRows;\n\t\t\t\t// console.log(\"rows\",rows);\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tres = rows.affectedRows;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\t// this.data[this.primary] = rows.insertId;\n\t\t\t\t// res = this.data ;\n\t\t\t\tres = rows.insertId;\n\t\t\t\tif (res) this.data[this.primary] = rows.insertId;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (this.iscount) res = rows[0].cmpt;\n\t\t\t\telse {\n\t\t\t\t\tthis._postTreatment(rows);\n\t\t\t\t\tif (this.onlyOne) {\n\t\t\t\t\t\tif (rows.length) res = rows[0];\n\t\t\t\t\t\telse res = null;\n\t\t\t\t\t} else res = rows;\n\t\t\t\t}\n\t\t}\n\t\t// console.log(\"res\", res, returnCompleteRow, this.command);\n\t\tif (this.def.debug) console.warn(\"res\", res);\n\t\t// console.log('The solution is: ', rows);\n\t\tif (returnCompleteRow && (this.command == \"UPDATE\" || this.command == \"INSERT\")) {\n\t\t\t// console.log(\"this.command\",this.command);\n\t\t\tif (this.command == \"UPDATE\") {\n\t\t\t\tlet rows2 = await this.table.find(this.original_where, this.original_whereData).exec();\n\t\t\t\tif (this.onlyOne) return rows2[0];\n\t\t\t\treturn rows2;\n\t\t\t} else {\n\t\t\t\tlet ftemp = {};\n\t\t\t\tftemp[this.primary] = res;\n\t\t\t\tif (!res) {\n\t\t\t\t\t// console.log(\"res\", res, this.primary, this.data);\n\t\t\t\t\tftemp[this.primary] = this.data[this.primary];\n\t\t\t\t}\n\t\t\t\tlet rows2 = await this.table.findone(ftemp).exec();\n\t\t\t\t// if (errsql) console.warn(\"errsql\", errsql);\n\t\t\t\treturn rows2;\n\t\t\t}\n\t\t} else return res;\n\t}\n};\n"],"file":"DbTableExec.js"}