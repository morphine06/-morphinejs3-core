{"version":3,"sources":["../src/DbTableExec.js"],"names":["dayjs","require","chalk","module","exports","DbTableExec","constructor","table","DbMysql","connection","def","modelname","selected","command","returnCompleteRow","primary","primaryType","primaryLength","where","whereData","onlyOne","order","having","groupby","tabAlreadyIncluded","logQuery","catchErr","iscount","joinModels","fieldJoin","modelnameto","modelalias","fieldName","field","Object","entries","attributes","type","length","select","fields","find","undefined","count","findone","create","data","cloneDeep","what","JSON","parse","stringify","update","original_where","original_whereData","replace","updateone","query","querySaved","destroy","_searchModelFromFieldName","fromModelName","f","n","isNotAlias","models","model","alias","modeltolink","modeltolinkname","log","swallowError","catchError","returnRow","populateAll","exclude","me","populateThis","origins","defField","indexOf","populate","tabFieldsJoins","split","previousModelName","previousModelAlias","tabOrigin","iJoin","join","console","warn","red","magenta","push","modelaliasto","origin","fieldJoinName","orderBy","groupBy","_createWhere","fromUpdate","Number","isInteger","forEach","num","reg","RegExp","concat","index","key","val","_createSelect","tabSelect","as","_createJoin","tabJoin","tableName","_createOrder","_createSelectQuery","_createInsertQuery","vals","autoincrement","hasOwnProperty","defaultsTo","_createUpdateQuery","_createDestroyQuery","_preTreatment","e","Date","format","m","isValid","_postTreatment","rows","row","obj","previousObj","lastO","o","_beforeQuery","fn","fn2","useUpdatedAt","updatedAt","updatedAtForced","beforeUpdate","beforeDestroy","useCreatedAt","createdAt","createdAtForced","beforeCreate","beforeSelect","exec","w","wData","debug","error","postTreatmentMain","res","affectedRows","insertId","cmpt","rows2","ftemp"],"mappings":"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","sourcesContent":["const dayjs = require(\"dayjs\");\nconst chalk = require(\"chalk\");\nmodule.exports = class DbTableExec {\n\tconstructor(table) {\n\t\tthis.table = table;\n\t\tthis.DbMysql = table.DbMysql;\n\t\tthis.connection = table.connection;\n\t\tthis.def = table.def;\n\t\tthis.modelname = this.def.modelname;\n\t\tthis.selected = [];\n\t\tthis.command = \"SELECT\";\n\t\tthis.returnCompleteRow = true;\n\t\tthis.primary = \"id\";\n\t\tthis.primaryType = \"integer\";\n\t\tthis.primaryLength = 11;\n\t\tthis.where = \"\";\n\t\tthis.whereData = [];\n\t\tthis.onlyOne = false;\n\t\tthis.order = \"\";\n\t\tthis.having = \"\";\n\t\tthis.groupby = \"\";\n\t\tthis.tabAlreadyIncluded = {};\n\t\tthis.logQuery = false;\n\t\tthis.catchErr = false;\n\t\tthis.iscount = false;\n\t\t// this.swallowerror = false;\n\t\tthis.joinModels = [{ modelname: this.modelname, fieldJoin: null, modelnameto: null, modelalias: \"t1\" }];\n\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\tif (field.primary) {\n\t\t\t\tthis.primary = fieldName;\n\t\t\t\tthis.primaryType = field.type;\n\t\t\t\tthis.primaryLength = field.length;\n\t\t\t}\n\t\t}\n\t}\n\tselect(fields) {\n\t\tthis.selected = fields;\n\t\treturn this;\n\t}\n\tfind(where, whereData) {\n\t\tthis.command = \"SELECT\";\n\t\tthis.onlyOne = false;\n\t\tthis.where = where;\n\t\tif (whereData === undefined) this.whereData = [];\n\t\telse this.whereData = whereData;\n\t\treturn this;\n\t}\n\tcount(where, whereData) {\n\t\tthis.iscount = true;\n\t\treturn this.find(where, whereData);\n\t}\n\tfindone(where, whereData) {\n\t\tthis.onlyOne = true;\n\t\tthis.where = where;\n\t\tif (whereData === undefined) this.whereData = [];\n\t\telse this.whereData = whereData;\n\t\treturn this;\n\t}\n\tcreate(data) {\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"INSERT\";\n\t\tthis.data = data;\n\t\treturn this;\n\t}\n\tcloneDeep(what) {\n\t\treturn JSON.parse(JSON.stringify(what));\n\t}\n\tupdate(where, whereData, data) {\n\t\tif (data === undefined) {\n\t\t\tdata = whereData;\n\t\t\tthis.whereData = [];\n\t\t} else {\n\t\t\tthis.whereData = whereData;\n\t\t}\n\t\tthis.original_where = this.cloneDeep(where);\n\t\tthis.original_whereData = this.cloneDeep(this.whereData);\n\t\tthis.whereData = [];\n\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"UPDATE\";\n\t\tthis.where = where;\n\t\tthis.data = data;\n\t\t// console.log(\"where,data\", where, data);\n\t\treturn this;\n\t}\n\treplace(data) {\n\t\t// this.original_where = this.cloneDeep(where);\n\t\t// this.original_whereData = this.cloneDeep(this.whereData);\n\t\tthis.whereData = [];\n\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"REPLACE\";\n\t\tthis.where = \"\";\n\t\tthis.data = data;\n\t\t// console.log(\"where,data\", where, data);\n\t\treturn this;\n\t}\n\tupdateone(where, whereData, data) {\n\t\tthis.update(where, whereData, data);\n\t\tthis.onlyOne = true;\n\t\treturn this;\n\t}\n\tquery(query, data) {\n\t\tthis.command = \"QUERY\";\n\t\tthis.whereData = data;\n\t\tthis.querySaved = query;\n\t\treturn this;\n\t}\n\tdestroy(where, whereData = []) {\n\t\tthis.whereData = whereData;\n\t\tthis.onlyOne = false;\n\t\tthis.command = \"DELETE\";\n\t\tthis.where = where;\n\t\treturn this;\n\t}\n\t_searchModelFromFieldName(fieldJoin, fromModelName) {\n\t\t// console.log(\"fieldJoin, fromModelName\", fieldJoin, fromModelName);\n\t\tlet f = null,\n\t\t\tn = \"\",\n\t\t\tisNotAlias = false;\n\t\tfor (const [fieldName, field] of Object.entries(this.DbMysql.models[fromModelName].def.attributes)) {\n\t\t\tif (field.model && (field.alias == fieldJoin || fieldName == fieldJoin)) {\n\t\t\t\tf = field;\n\t\t\t\tn = fieldName;\n\t\t\t\tif (fieldName == fieldJoin) isNotAlias = true;\n\t\t\t}\n\t\t}\n\t\treturn { modeltolink: f, modeltolinkname: n, isNotAlias };\n\t}\n\tlog() {\n\t\tthis.logQuery = true;\n\t\treturn this;\n\t}\n\tswallowError() {\n\t\tthis.catchErr = false;\n\t\treturn this;\n\t}\n\tcatchError() {\n\t\tthis.catchErr = true;\n\t\treturn this;\n\t}\n\treturnRow(returnCompleteRow) {\n\t\tthis.returnCompleteRow = returnCompleteRow;\n\t\treturn this;\n\t}\n\tpopulateAll(exclude = []) {\n\t\tlet me = this;\n\t\tfunction populateThis(table, origins) {\n\t\t\t// eslint-disable-next-line\n\t\t\tfor (const [field, defField] of Object.entries(table.def.attributes)) {\n\t\t\t\tif (defField.model) {\n\t\t\t\t\tif (exclude.indexOf(origins + defField.alias) >= 0) continue;\n\t\t\t\t\tme.populate(origins + defField.alias);\n\t\t\t\t\tpopulateThis(me.DbMysql.models[defField.model], origins + defField.alias + \".\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpopulateThis(this.table, \"\");\n\t\t//origins=[]\n\t\treturn this;\n\t}\n\tpopulate(fieldJoin) {\n\t\t// console.log(\"fieldJoin, fieldJoinName\", fieldJoin);\n\t\tlet tabFieldsJoins = fieldJoin.split(\".\");\n\t\tlet previousModelName = this.modelname;\n\t\tlet previousModelAlias = \"t1\";\n\t\tlet tabOrigin = [];\n\t\tfor (let iJoin = 0; iJoin < tabFieldsJoins.length; iJoin++) {\n\t\t\tlet join = tabFieldsJoins[iJoin];\n\n\t\t\tlet { modeltolink, modeltolinkname, isNotAlias } = this._searchModelFromFieldName(join, previousModelName);\n\t\t\tif (!modeltolink) {\n\t\t\t\tconsole.warn(chalk.red(`The alias ${join} not found in table ${previousModelName}. Can't populate ${fieldJoin}.`));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!modeltolink.alias) {\n\t\t\t\tconsole.warn(chalk.red(`Alias name is mandatory for field ${modeltolinkname}`));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (isNotAlias) {\n\t\t\t\tconsole.warn(chalk.magenta(`It's better to indicate alias name '${modeltolink.alias}' rather field name ${join} to populate`));\n\t\t\t\tjoin = modeltolink.alias;\n\t\t\t}\n\t\t\t// console.log(\"modeltolink\", modeltolink);\n\t\t\tlet modelalias = \"t1\";\n\t\t\ttabOrigin.push(join);\n\t\t\tif (!this.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")]) {\n\t\t\t\tmodelalias = tabOrigin.join(\"__\"); //+ modeltolink.alias\n\t\t\t\tthis.joinModels.push({\n\t\t\t\t\tmodelname: modeltolink.model,\n\t\t\t\t\tmodelalias: modelalias,\n\t\t\t\t\tfieldJoin: modeltolinkname,\n\t\t\t\t\tmodelnameto: previousModelName,\n\t\t\t\t\tmodelaliasto: previousModelAlias,\n\t\t\t\t\torigin: tabOrigin.join(\".\"),\n\t\t\t\t\tfieldJoinName: modeltolink.alias || null,\n\t\t\t\t});\n\t\t\t\tthis.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")] = modelalias;\n\t\t\t} else {\n\t\t\t\tmodelalias = this.tabAlreadyIncluded[modeltolink.model + \"__\" + tabOrigin.join(\"_\")];\n\t\t\t}\n\t\t\tpreviousModelName = modeltolink.model;\n\t\t\tpreviousModelAlias = modelalias;\n\t\t}\n\t\treturn this;\n\t}\n\torderBy(order) {\n\t\tthis.order = order;\n\t\treturn this;\n\t}\n\tgroupBy(groupby) {\n\t\tthis.groupby = groupby;\n\t\treturn this;\n\t}\n\thaving(having) {\n\t\tthis.having = having;\n\t\treturn this;\n\t}\n\t_createWhere(fromUpdate) {\n\t\t// console.log(\"this.joinModels\", this.joinModels);\n\t\tlet where = \"\";\n\t\tif (!this.where) {\n\t\t\twhere = \"1=1\";\n\t\t} else if (Number.isInteger(this.where)) {\n\t\t\twhere += this.primary + \"=?\";\n\t\t\tthis.whereData.push(this.where);\n\t\t} else if (typeof this.where === \"string\") {\n\t\t\twhere = this.where;\n\t\t\tthis.joinModels.forEach((model, num) => {\n\t\t\t\tif (model.origin) {\n\t\t\t\t\tlet reg = new RegExp(model.origin, \"gi\");\n\t\t\t\t\twhere = where.replace(reg, model.modelalias);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (fromUpdate) {\n\t\t\t\tthis.whereData = this.whereData.concat(this.original_whereData);\n\t\t\t}\n\t\t} else {\n\t\t\twhere += \"1\";\n\t\t\tObject.entries(this.where).forEach(([key, val], index) => {\n\t\t\t\twhere += \" && \" + key + \"=?\";\n\t\t\t\tthis.whereData.push(val);\n\t\t\t});\n\t\t}\n\n\t\treturn where;\n\t}\n\t_createSelect() {\n\t\tlet tabSelect = [];\n\t\tthis.joinModels.forEach((model, num) => {\n\t\t\tfor (const [fieldName] of Object.entries(this.DbMysql.models[model.modelname].def.attributes)) {\n\t\t\t\tlet as = \"\";\n\t\t\t\tif (model.modelnameto) as = \" AS \" + model.modelalias + \"_\" + model.fieldJoin + \"_\" + fieldName;\n\t\t\t\ttabSelect.push(model.modelalias + \".\" + fieldName + as);\n\t\t\t}\n\t\t});\n\t\tif (this.selected.length) tabSelect = this.selected;\n\t\treturn tabSelect.join(\", \");\n\t}\n\t_createJoin() {\n\t\tlet tabJoin = [];\n\t\tthis.joinModels.forEach((model, num) => {\n\t\t\tif (!model.modelnameto) tabJoin.push(this.DbMysql.models[model.modelname].def.tableName + \" \" + model.modelalias);\n\t\t\telse\n\t\t\t\ttabJoin.push(\n\t\t\t\t\t\"LEFT JOIN \" +\n\t\t\t\t\t\tthis.DbMysql.models[model.modelname].def.tableName +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tmodel.modelalias +\n\t\t\t\t\t\t\" ON \" +\n\t\t\t\t\t\tmodel.modelalias +\n\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\tthis.DbMysql.models[model.modelname].primary +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tmodel.modelaliasto +\n\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\tmodel.fieldJoin\n\t\t\t\t);\n\t\t});\n\t\treturn tabJoin.join(\" \");\n\t}\n\t_createOrder() {\n\t\tlet order = \"\";\n\t\tif (this.order) order = \" ORDER BY \" + this.order;\n\t\treturn order;\n\t}\n\t_createSelectQuery() {\n\t\tlet query = \"SELECT \" + this._createSelect() + \" FROM \" + this._createJoin() + \" WHERE \" + this._createWhere() + this._createOrder();\n\t\tif (this.iscount) {\n\t\t\tquery =\n\t\t\t\t\"SELECT count(t1.\" + this.primary + \") as cmpt FROM \" + this._createJoin() + \" WHERE \" + this._createWhere() + this._createOrder();\n\t\t}\n\t\treturn query;\n\t}\n\t_createInsertQuery() {\n\t\tlet fields = [],\n\t\t\tvals = [];\n\t\tfor (const [key, val] of Object.entries(this.def.attributes)) {\n\t\t\tif (val.primary && val.autoincrement) continue;\n\t\t\tfields.push(key);\n\t\t\tvals.push(\"?\");\n\t\t\tif (this.data.hasOwnProperty(key)) {\n\t\t\t\tthis.whereData.push(this.data[key]);\n\t\t\t} else {\n\t\t\t\tif (val.defaultsTo) this.whereData.push(val.defaultsTo);\n\t\t\t\telse {\n\t\t\t\t\tif (\n\t\t\t\t\t\tval.type == \"int\" ||\n\t\t\t\t\t\tval.type == \"integer\" ||\n\t\t\t\t\t\tval.type == \"tinyint\" ||\n\t\t\t\t\t\tval.type == \"smallint\" ||\n\t\t\t\t\t\tval.type == \"mediumint\" ||\n\t\t\t\t\t\tval.type == \"year\" ||\n\t\t\t\t\t\tval.type == \"float\" ||\n\t\t\t\t\t\tval.type == \"double\" ||\n\t\t\t\t\t\tval.type == \"boolean\"\n\t\t\t\t\t)\n\t\t\t\t\t\tthis.whereData.push(0);\n\t\t\t\t\telse this.whereData.push(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet query = \"INSERT INTO \" + this.def.tableName + \"(\" + fields.join(\", \") + \") VALUES (\" + vals.join(\", \") + \")\";\n\t\treturn query;\n\t}\n\t_createUpdateQuery() {\n\t\tlet vals = [];\n\t\tfor (const [key, val] of Object.entries(this.data)) {\n\t\t\tif (this.def.attributes[key]) {\n\t\t\t\tvals.push(key + \"=?\");\n\t\t\t\tthis.whereData.push(val);\n\t\t\t}\n\t\t}\n\t\tlet query = \"UPDATE \" + this.def.tableName + \" SET \" + vals.join(\", \") + \" WHERE \" + this._createWhere(true);\n\t\treturn query;\n\t}\n\t// _createReplaceQuery() {\n\t// \tlet vals = [];\n\t// \tfor (const [key, val] of Object.entries(this.data)) {\n\t// \t\tif (this.def.attributes[key]) {\n\t// \t\t\tvals.push(key + \"=?\");\n\t// \t\t\tthis.whereData.push(val);\n\t// \t\t}\n\t// \t}\n\t// \tlet query = \"UPDATE \" + this.def.tableName + \" SET \" + vals.join(\", \") + \" WHERE \" + this._createWhere(true);\n\t// \treturn query;\n\t// }\n\t_createDestroyQuery() {\n\t\tlet query = \"DELETE FROM \" + this.def.tableName + \" WHERE \" + this._createWhere();\n\t\treturn query;\n\t}\n\t_preTreatment() {\n\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\t// console.log(\"fieldName,field.type\",fieldName,field.type);\n\t\t\tif (this.data[fieldName] === undefined) return;\n\t\t\tif (field.type == \"json\" && typeof this.data[fieldName] == \"object\") {\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[fieldName] = JSON.stringify(this.data[fieldName]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(\"json stringify error\", e);\n\t\t\t\t\tthis.data[fieldName] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (field.type == \"json\" && typeof this.data[fieldName] !== \"object\") {\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[fieldName] = JSON.parse(this.data[fieldName]);\n\t\t\t\t} catch (e) {}\n\t\t\t\ttry {\n\t\t\t\t\tthis.data[fieldName] = JSON.stringify(this.data[fieldName]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(\"json stringify error\", e);\n\t\t\t\t\tthis.data[fieldName] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (field.type == \"boolean\") {\n\t\t\t\tif (this.data[fieldName] === false) this.data[fieldName] = 0;\n\t\t\t\tif (this.data[fieldName] === true) this.data[fieldName] = 1;\n\t\t\t\tif (this.data[fieldName] === \"false\") this.data[fieldName] = 0;\n\t\t\t\tif (this.data[fieldName] === \"true\") this.data[fieldName] = 1;\n\t\t\t}\n\t\t\tif (field.type == \"datetime\" && this.data[fieldName]) {\n\t\t\t\tthis.data[fieldName] = dayjs(new Date(this.data[fieldName])).format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t}\n\t\t\tif (field.type == \"date\" && this.data[fieldName]) {\n\t\t\t\tlet m = dayjs(new Date(this.data[fieldName]));\n\t\t\t\tif (this.data[fieldName] == \"0000-00-00\" || this.data[fieldName] == \"\" || !m.isValid()) this.data[fieldName] = \"0000-00-00\";\n\t\t\t\telse this.data[fieldName] = m.format(\"YYYY-MM-DD\");\n\t\t\t}\n\t\t\tif (field.type == \"datetime\" && this.data[fieldName]) {\n\t\t\t\tlet m = dayjs(new Date(this.data[fieldName]));\n\t\t\t\tif (\n\t\t\t\t\tthis.data[fieldName] == \"0000-00-00\" ||\n\t\t\t\t\tthis.data[fieldName] == \"0000-00-00 00:00:00\" ||\n\t\t\t\t\tthis.data[fieldName] == \"\" ||\n\t\t\t\t\t!m.isValid()\n\t\t\t\t)\n\t\t\t\t\tthis.data[fieldName] = \"0000-00-00 00:00:00\";\n\t\t\t\telse this.data[fieldName] = m.format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t}\n\t\t}\n\t}\n\t_postTreatment(rows) {\n\t\trows.forEach((row) => {\n\t\t\tfor (const [fieldName, field] of Object.entries(this.def.attributes)) {\n\t\t\t\tif (field.type == \"json\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (row[fieldName]) row[fieldName] = JSON.parse(row[fieldName]);\n\t\t\t\t\t\telse row[fieldName] = null;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(chalk.red(`json parse error - fieldName:\"${fieldName}\" - value:\"${row[fieldName]}\"`));\n\t\t\t\t\t\trow[fieldName] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (field.type == \"boolean\") {\n\t\t\t\t\tif (row[fieldName] === true || row[fieldName] === \"true\" || row[fieldName] === 1 || row[fieldName] === \"1\") row[fieldName] = true;\n\t\t\t\t\telse row[fieldName] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.joinModels.forEach((model, num) => {\n\t\t\t\t// console.log(\"model\", model);\n\t\t\t\tif (model.modelnameto) {\n\t\t\t\t\tlet obj = {};\n\n\t\t\t\t\tfor (const [fieldName, field] of Object.entries(this.DbMysql.models[model.modelname].def.attributes)) {\n\t\t\t\t\t\t// let f = DbMysql.models[model.modelname].def.tableName+'_'+model.fieldJoin+'_'+fieldName ;\n\t\t\t\t\t\tlet f = model.modelalias + \"_\" + model.fieldJoin + \"_\" + fieldName;\n\t\t\t\t\t\tif (row.hasOwnProperty(f)) {\n\t\t\t\t\t\t\tif (field.type == \"json\") {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (row[f]) row[f] = JSON.parse(row[f]);\n\t\t\t\t\t\t\t\t\telse row[f] = null;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.warn(chalk.red(\"json parse error\"), e, f, row[f]);\n\t\t\t\t\t\t\t\t\trow[f] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tobj[fieldName] = row[f];\n\t\t\t\t\t\t\tdelete row[f];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"model.fieldJoinName\", model.fieldJoinName);\n\t\t\t\t\tif (model.fieldJoinName && model.modelaliasto == \"t1\") {\n\t\t\t\t\t\trow[model.fieldJoinName] = obj;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!obj[this.DbMysql.models[model.modelname].primary]) {\n\t\t\t\t\t\t\tobj = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet tabFieldsJoins = model.origin.split(\".\");\n\t\t\t\t\t\tlet previousObj = row;\n\t\t\t\t\t\t// console.log(\"previousObj\", previousObj);\n\t\t\t\t\t\tlet lastO = null;\n\t\t\t\t\t\ttabFieldsJoins.forEach((o, index) => {\n\t\t\t\t\t\t\tlastO = o;\n\t\t\t\t\t\t\tif (index >= tabFieldsJoins.length - 1) return;\n\t\t\t\t\t\t\tpreviousObj = previousObj[o];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (previousObj) previousObj[lastO] = obj;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tasync _beforeQuery() {\n\t\tlet fn = null,\n\t\t\tfn2 = null;\n\t\tswitch (this.command) {\n\t\t\tcase \"UPDATE\":\n\t\t\t\t// if (this.def.useUpdatedAt && !this.data.updatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.def.useUpdatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.data.updatedAtForced) this.data.updatedAt = this.data.updatedAtForced;\n\t\t\t\tif (this.def.beforeUpdate) fn = this.def.beforeUpdate;\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tif (this.def.beforeDestroy) fn2 = this.def.beforeDestroy;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\t// if (this.def.useCreatedAt && !this.data.createdAt) this.data.createdAt = new Date();\n\t\t\t\t// if (this.def.useUpdatedAt && !this.data.updatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.def.useCreatedAt) this.data.createdAt = new Date();\n\t\t\t\tif (this.def.useUpdatedAt) this.data.updatedAt = new Date();\n\t\t\t\tif (this.data.createdAtForced) this.data.createdAt = this.data.createdAtForced;\n\t\t\t\tif (this.data.updatedAtForced) this.data.updatedAt = this.data.updatedAtForced;\n\t\t\t\tif (this.def.beforeCreate) fn = this.def.beforeCreate;\n\t\t\t\tbreak;\n\t\t\t// case 'REPLACE':\n\t\t\t// if (this.def.beforeCreate) fn = this.def.beforeCreate ;\n\t\t\t// break;\n\t\t\tdefault:\n\t\t\t\tif (this.def.beforeSelect) fn = this.def.beforeSelect;\n\t\t}\n\t\tif (fn) await fn(this.data);\n\t\telse if (fn2) await fn();\n\t}\n\tasync exec(returnCompleteRow = true) {\n\t\tif (this.command == \"REPLACE\") {\n\t\t\tlet w = \"0\",\n\t\t\t\twData = [];\n\t\t\tif (this.data[this.primary]) {\n\t\t\t\tw = this.primary + \"=?\";\n\t\t\t\twData.push(this.data[this.primary]);\n\t\t\t}\n\t\t\tlet query = \"SELECT \" + this.primary + \" FROM \" + this.def.tableName + \" WHERE \" + w;\n\t\t\trows = await this.connection.query(query, wData, this.catchErr);\n\t\t\tif (rows.length) {\n\t\t\t\tthis.command = \"UPDATE\";\n\t\t\t\tthis.where = this.primary + \"=?\";\n\t\t\t\tthis.whereData = [];\n\t\t\t\tthis.original_where = this.primary + \"=?\";\n\t\t\t\tthis.original_whereData = [rows[0][this.primary]];\n\t\t\t} else {\n\t\t\t\tthis.command = \"INSERT\";\n\t\t\t\tdelete this.data[this.primary];\n\t\t\t}\n\t\t}\n\n\t\tthis._beforeQuery();\n\t\tlet query;\n\t\tswitch (this.command) {\n\t\t\tcase \"QUERY\":\n\t\t\t\tquery = this.querySaved;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\tthis._preTreatment();\n\t\t\t\tquery = this._createInsertQuery();\n\t\t\t\tbreak;\n\t\t\tcase \"UPDATE\":\n\t\t\t\tthis._preTreatment();\n\t\t\t\tquery = this._createUpdateQuery();\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tquery = this._createDestroyQuery();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tquery = this._createSelectQuery();\n\t\t}\n\n\t\tif (this.def.debug || this.logQuery) console.warn(\"query\", query, this.whereData);\n\t\tlet rows;\n\t\ttry {\n\t\t\trows = await this.connection.query(query, this.whereData, this.catchErr);\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t\tlet data = await this.postTreatmentMain(rows, returnCompleteRow);\n\t\treturn data;\n\t\t// }\n\t}\n\tasync postTreatmentMain(rows, returnCompleteRow) {\n\t\tlet res;\n\t\tif (!rows) {\n\t\t\tres = {};\n\t\t\tswitch (this.command) {\n\t\t\t\tcase \"QUERY\":\n\t\t\t\t\tres = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"UPDATE\":\n\t\t\t\t\tres = null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DELETE\":\n\t\t\t\t\tres = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"INSERT\":\n\t\t\t\t\tres = null;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tres = {};\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tswitch (this.command) {\n\t\t\tcase \"QUERY\":\n\t\t\t\tres = rows;\n\t\t\t\tbreak;\n\t\t\tcase \"UPDATE\":\n\t\t\t\tres = rows.affectedRows;\n\t\t\t\tbreak;\n\t\t\tcase \"DELETE\":\n\t\t\t\tres = rows.affectedRows;\n\t\t\t\tbreak;\n\t\t\tcase \"INSERT\":\n\t\t\t\tres = rows.insertId;\n\t\t\t\tif (res) this.data[this.primary] = rows.insertId;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (this.iscount) res = rows[0].cmpt;\n\t\t\t\telse {\n\t\t\t\t\tthis._postTreatment(rows);\n\t\t\t\t\tif (this.onlyOne) {\n\t\t\t\t\t\tif (rows.length) res = rows[0];\n\t\t\t\t\t\telse res = null;\n\t\t\t\t\t} else res = rows;\n\t\t\t\t}\n\t\t}\n\t\tif (this.def.debug) console.warn(\"res\", res);\n\t\tif (returnCompleteRow && (this.command == \"UPDATE\" || this.command == \"INSERT\")) {\n\t\t\tif (this.command == \"UPDATE\") {\n\t\t\t\tlet rows2 = await this.table.find(this.original_where, this.original_whereData).exec();\n\t\t\t\tif (this.onlyOne) return rows2[0];\n\t\t\t\treturn rows2;\n\t\t\t} else {\n\t\t\t\tlet ftemp = {};\n\t\t\t\tftemp[this.primary] = res;\n\t\t\t\tif (!res) {\n\t\t\t\t\tftemp[this.primary] = this.data[this.primary];\n\t\t\t\t}\n\t\t\t\tlet rows2 = await this.table.findone(ftemp).exec();\n\t\t\t\treturn rows2;\n\t\t\t}\n\t\t} else return res;\n\t}\n};\n"],"file":"DbTableExec.js"}